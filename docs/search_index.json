[["electricity-profiles.html", "Chapter 2 Electricity profiles 2.1 Electricity generation profiles for EGAT sale", " Chapter 2 Electricity profiles This chapter provides electricity profiles and a R coding technique. Electricity profiles are illustrated to give an insight into profile behavior. R coding technique are given in order to understand the process flow and manage the big data obtained from several sources in the organization. 2.1 Electricity generation profiles for EGAT sale Before the project starts, library are required as follows: library(tidyverse) #For data manipulation library(readxl) #For reading the excel sheet library(scales) library(glue) library(knitr) Design a theme and lines for figures #----- Create general theme for figures -----#### ThemeLine &lt;- theme_bw() + theme( panel.border=element_rect(fill=NA), panel.grid.minor = element_line(color = NA), # axis.title=element_text(size=5), # axis.text.x = element_text(hjust=1,size = 10, angle = 0), axis.line=element_line(colour=&quot;black&quot;), panel.background=element_rect(fill = &quot;white&quot;), panel.grid.major.x=element_line(linetype=&quot;dashed&quot;,colour=&quot;grey&quot;,size=0.5), panel.grid.major.y = element_blank(), # panel.grid.major=element_blank(), strip.background=element_rect(fill=&quot;white&quot;, colour=&quot;white&quot;), strip.text.x = element_text(size=10, colour = &quot;black&quot;, angle = 0,face=&quot;bold&quot;), axis.text.x=element_text(size = 10,angle=45, vjust=0.9, hjust=1, margin = unit(c(t = 0.3, r = 0, b = 0, l = 0), &quot;cm&quot;)), axis.text.y=element_text(size = 10,margin = unit(c(t = 0, r = 0.3, b = 0, l = 0), &quot;cm&quot;)), legend.text = element_text(size = 10), legend.title = element_text(size = 10), axis.ticks.length=unit(-0.15,&quot;cm&quot;) ) Create line palettes for drawing figures linepalette1 &lt;- c(&quot;#4DAF4A&quot;,&quot;#FF7F00&quot;,&quot;#377EB8&quot;,&quot;#E41A1C&quot;,&quot;#984EA3&quot;,&quot;#F781BF&quot;,&quot;#8DD3C7&quot;,&quot;#FB8072&quot;,&quot;#80B1D3&quot;,&quot;#FDB462&quot;,&quot;#B3DE69&quot;,&quot;#FCCDE5&quot;,&quot;#D9D9D9&quot;,&quot;#BC80BD&quot;,&quot;#CCEBC5&quot;,&quot;#FFED6F&quot;,&quot;#7f878f&quot;,&quot;#A65628&quot;,&quot;#FFFF33&quot;) linepalette2 &lt;- c(&quot;#E41A1C&quot;,&quot;#FF7F00&quot;,&quot;#377EB8&quot;,&quot;#B3DE69&quot;,&quot;#4DAF4A&quot;,&quot;#984EA3&quot;,&quot;#F781BF&quot;,&quot;#8DD3C7&quot;,&quot;#FB8072&quot;,&quot;#80B1D3&quot;,&quot;#FDB462&quot;,&quot;#FCCDE5&quot;,&quot;#D9D9D9&quot;,&quot;#BC80BD&quot;,&quot;#CCEBC5&quot;,&quot;#FFED6F&quot;,&quot;#7f878f&quot;,&quot;#A65628&quot;,&quot;#FFFF33&quot;) Create lists to store profile data, profile figure, and summary data. profiledata &lt;- list() profilefigure &lt;- list() summarydata &lt;- list() Create a varaible to assign the output directory of figures #----- Make variable for output directory -----#### outfigdir &lt;- c(&quot;figures/&quot;) The 2019 MEA EGAT sale profile data is extracted from the excel file provided by the “National Load Forecast Section” #----- ____ -----#### #----- The 2019 MEA EGAT sale profile ----#### # Profile data #### profile &lt;- read_excel(&quot;./raw_data/raw_data_profiles/02_Hourly Sale_NetGen_2019.xlsx&quot;, sheet = &quot;Load Curve&quot;, range = &quot;C3:D17523&quot; ) %&gt;% select(datetime = `Date/Time`, MEA) %&gt;% mutate(date = date(datetime), time = format(as.POSIXct(datetime),&quot;%H:%M:%S&quot;), year = year(datetime), month = month(datetime), day = day(datetime)) %&gt;% select(datetime, date, time, year, month, day, MEA) Get a peak and a minimum demands in MW by creating maxv and minv variables. The electricity sale (in EGAT case we call “Energy”) to MEA by EGAT is calculated. The equation is as followed: # Summary data #### maxv &lt;- ceiling(max(profile$MEA)) # Get a peak MW minv &lt;- floor(min(profile$MEA)) # Get a min MW energy &lt;- sum(profile$MEA)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(MEA == max(MEA)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(MEA == min(MEA)) %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table # Plot a profile #### profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = MEA, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;EGAT sale to MEA (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-3),1000), limits = c(0, round(maxv, -3))) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -3)), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;))+ geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = 0, vjust = 1.5) The EGAT sale to MEA (#fig:plot MEA EGAT sale)EGAT sale to MEA in 2019 "]]
