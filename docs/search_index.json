[["index.html", "Electricity Profiles Cloudbook: R technique About", " Electricity Profiles Cloudbook: R technique Puttipong Chunark, Ph.D. 2023-08-03 About This webpage is created to understand the electricity load profile at all levels. R coding techniques are included. Readers can learn how to code the R language in the format of scripts, R markdown, and bookdown. "],["introduction.html", "Chapter 1 Introduction 1.1 Electricity consumption situation 1.2 Electricity generation situation", " Chapter 1 Introduction Electricity is one of the key final energy to drive an economy. It is used to provide enduse demands. For instance, charging electric vehicles (EVs), lighting houses, heating water and cooking, driving motors to convey products in industrial processes. 1.1 Electricity consumption situation The Department of Alternative Energy Development and Efficiency (DEDE) published the “Energy Balance of Thailand 2021”. The report provides Thailand’s energy statistics in all sectors. In 2021, an electricity consumption (Final energy consumption) was 201,016 GWh (DEDE 2021). Manufacturing industry consumed the highest electricity (see Table 1.1). It accounted for 39% of total electricity consumption in 2021. Commercial and residential sectors were the second and the third largest electricity consumption. They accounted for 33% and 27%. The rest were mining (0.6%), agriculture (0.2%) and transport sectors (0.1%). Further energy statistics can be found in the report on page 57, “Thailand energy commodity account 2021”. Table 1.1: Electricity consumption in 2021 Sector Electricity (GWh) Agriculture 398 Mining 1279 Manufac. industry 78919 Construction na Residential 54481 Commercial 65718 Transport (Road) 1 Transport (Rail) 220 1.2 Electricity generation situation The electricity generation was 186,699 GWh in 2021. The exported and imported electricity were 33,356 GWh and 1,996 GWh. The electricity losses and own uses were 14,098 GWh and 2,945 GWh. Natural gas combined cycle power plants accounted for 59% of total electricity generation in 2021. Thermal power plants accounted for 30%. Table 1.2 gives the electricity generation by power plant in 2021. Table 1.2: Electricity generation in 2021 Power plant type Electricity (GWh) Hydro 4682 Thermal 56737 Gas turbine 1318 Combined cycle 110597 Diesel 28 Gas engine 4769 Others 8568 Total 186699 Coal &amp; its products consumption rapidly decreased in generating an electricity from 2017-2021. Solar and wind played a vital role in producing an electricity (see Figure 1.1). The unit of COAL &amp; ITS PRODUCTS, paddy husk, bagasses, agricultural waste and MSW are thousand ton. The unit of PETROLEUM PRODUCTS’s and NATURAL GAS are million litres (M.Litres) and MMscf., respectively. The electricity generation from solar, wind, small hydro power, large hydro power and geothermal, is reported in GWh. Biogas and OTHER energies are presented in cubic meter (m3) and GJ, respectively. Figure 1.1: Energy consumption for electricity generation from 2017–2021. References "],["getting-started-with-r.html", "Chapter 2 Getting started with R 2.1 Project initial settings", " Chapter 2 Getting started with R The R language is used in this project. It is applied to analyze and visualize the electricity generation, electricity demand, electricity profiles. Therefore, R language is needed to install in your computer. R can be run on several operating system. Installing R on Windows Installing R on macOS There is an integrated development environment (IDE) for R language. The IDE is an excellent text editor with syntax highlight and project viewer. The Rstudio IDE can be downloaded here. 2.1 Project initial settings 2.1.1 Installing packages Required packages can be downloaded by using the command install.packages(). A R code chunk is given below. install.packages(&quot;tidyverse&quot;, &quot;readxl&quot;,&quot;scales&quot;, &quot;glue&quot;,&quot;knitr&quot;, &quot;plotly&quot;, &quot;ggrepel&quot;) 2.1.2 Packages settings Before the project starts, packages are required as follows: A tidyverse package is a bunch of packages to handle with a data analysis (for more information click here). It consists of data manipulation and visualization as follows: A ggplot2 package is for data visualization. A dplyr package is for data manipulation. A tidyr package is for data tidying. A readr package is for data import. A purrr package is for functional programming. A tibble package is a modern reimagining of the data.frame. A stringr package is for strings. A forcats package is for factors. A lubridate package is for date and time. A readxl package is used for read data from Excel into R. A scales package is applied to scale plots in the ggplot2 package. A glue package interprets strings literal. The package embeds R expressions and inserts into argument string. A knitr package is a lightweight API’s designed to give users full control of the output without heavy coding work. In this project, the package is used for making a HTML. A plotly package is an alternative package to a ggplot2 package. It is an interactive web-base graphic (Ployly 2023; Schork 2023). Plotly uses an open source JavaScript graphing library ployly.js to render dynamic plots. A ggrepel package provides geoms for ggplot2 to repel overlapping text labels. geom_text_repel(), and geom_label_repel() library(tidyverse) #For data manipulation library(readxl) #For reading the excel sheet library(scales) library(glue) library(knitr) library(plotly) library(ggrepel) 2.1.3 Theme settings Theme and lines for figures are set in a variable named Themeline as follows: theme_bw() function provides a black and white theme. theme() function applied for setting theme and line represented in plots. linepalette1 and linepalette1 variables set line colors. ThemeLine &lt;- theme_bw() + theme( panel.border=element_rect(fill=NA), panel.grid.minor = element_line(color = NA), # axis.title=element_text(size=5), # axis.text.x = element_text(hjust=1,size = 10, angle = 0), axis.line=element_line(colour=&quot;black&quot;), panel.background=element_rect(fill = &quot;white&quot;), panel.grid.major.x=element_line(linetype=&quot;dashed&quot;,colour=&quot;grey&quot;,linewidth = 0.5), panel.grid.major.y = element_blank(), # panel.grid.major=element_blank(), strip.background=element_rect(fill=&quot;white&quot;, colour=&quot;white&quot;), strip.text.x = element_text(size=10, colour = &quot;black&quot;, angle = 0,face=&quot;bold&quot;), axis.text.x=element_text(size = 10,angle=45, vjust=0.9, hjust=1, margin = unit(c(t = 0.3, r = 0, b = 0, l = 0), &quot;cm&quot;)), axis.text.y=element_text(size = 10,margin = unit(c(t = 0, r = 0.3, b = 0, l = 0), &quot;cm&quot;)), legend.text = element_text(size = 10), legend.title = element_text(size = 10), axis.ticks.length=unit(-0.15,&quot;cm&quot;) ) linepalette1 &lt;- c(&quot;#4DAF4A&quot;,&quot;#FF7F00&quot;,&quot;#377EB8&quot;,&quot;#E41A1C&quot;,&quot;#984EA3&quot;,&quot;#F781BF&quot;,&quot;#8DD3C7&quot;,&quot;#FB8072&quot;,&quot;#80B1D3&quot;,&quot;#FDB462&quot;,&quot;#B3DE69&quot;,&quot;#FCCDE5&quot;,&quot;#D9D9D9&quot;,&quot;#BC80BD&quot;,&quot;#CCEBC5&quot;,&quot;#FFED6F&quot;,&quot;#7f878f&quot;,&quot;#A65628&quot;,&quot;#FFFF33&quot;) linepalette2 &lt;- c(&quot;#E41A1C&quot;,&quot;#FF7F00&quot;,&quot;#377EB8&quot;,&quot;#B3DE69&quot;,&quot;#4DAF4A&quot;,&quot;#984EA3&quot;,&quot;#F781BF&quot;,&quot;#8DD3C7&quot;,&quot;#FB8072&quot;,&quot;#80B1D3&quot;,&quot;#FDB462&quot;,&quot;#FCCDE5&quot;,&quot;#D9D9D9&quot;,&quot;#BC80BD&quot;,&quot;#CCEBC5&quot;,&quot;#FFED6F&quot;,&quot;#7f878f&quot;,&quot;#A65628&quot;,&quot;#FFFF33&quot;) 2.1.4 Directory setting Lists are create to store variables. #----- Make a list of profile to store data -----#### profiledata &lt;- list() profilefigure &lt;- list() summarydata &lt;- list() #----- Make variable for output directory -----#### outfigdir &lt;- c(&quot;figures/&quot;) References "],["electricity-profiles.html", "Chapter 3 Electricity profiles 3.1 The EGAT electrity sale profiles 3.2 The electrity requirement profiles 3.3 The 2019 EGAT NET electricity generation profile", " Chapter 3 Electricity profiles This chapter provides electricity profiles and a R coding technique. Electricity profiles are illustrated to give an insight into profile behavior. R coding technique are given in order to understand the process flow and manage the big data obtained from several sources in the organization. 3.1 The EGAT electrity sale profiles 3.1.1 The 2019 Metropolitan Electricity Authority (MEA) EGAT sale profile The electricity sale profile from EGAT is given by the Power System Control and Operation Division (ฝ่ายควบคุมระบบกำลังไฟฟ้า). #----- The 2019 MEA EGAT sale profile ----#### # Profile data #### profile &lt;- read_excel(&quot;raw_data/raw_data_profiles/02_Hourly Sale_NetGen_2019.xlsx&quot;, sheet = &quot;Load Curve&quot;, range = &quot;C3:D17523&quot; ) %&gt;% select(datetime = `Date/Time`, MEA) %&gt;% mutate(date = date(datetime), time = format(as.POSIXct(datetime),&quot;%H:%M:%S&quot;), year = year(datetime), month = month(datetime), day = day(datetime)) %&gt;% select(datetime, date, time, year, month, day, MEA) Table 3.1: The 2019 EGAT sale to MEA profile datetime date time year month day MEA 2019-01-01 00:00:00 2019-01-01 00:00:00 2019 1 1 3361.083 2019-01-01 00:30:00 2019-01-01 00:30:00 2019 1 1 3244.405 2019-01-01 01:00:00 2019-01-01 01:00:00 2019 1 1 3199.672 2019-01-01 01:30:00 2019-01-01 01:30:00 2019 1 1 3153.101 2019-01-01 02:00:00 2019-01-01 02:00:00 2019 1 1 3085.642 The peak, minimun in the unit of MW, and an electricity sale to MEA in GWh from the profile are calculated. The electricity sale to MEA (in GWh) is calculated by the summation of profile in MW divided by 2000. The reason to divide by 2,000 is that the profile is given a time stamp in every 30-min. There are 17,520 values. Therefore, the profile is divided by 2 to get the results in every 1 hr.. We divided the output by 1,000 to convert the unit from MWh to GWh (see equation (3.1)). \\[\\begin{equation} Ene_{t}=\\frac{\\sum_{h=1}^{17520} (Prf_{t,h})}{2*1000} \\tag{3.1} \\end{equation}\\] Where, \\(Ene_{t}\\) denotes an calculated energy (electricity) in year \\(t\\). \\(Prf_{t,h}\\) denotes a profile (\\(Prf\\)) in the unit of MW in year \\(t\\) at a time stamp \\(h\\). \\(h\\) denotes a time stamp in a 30-minute interval. Therefore, there are 17,520 intervals in a year (8,760 hrs.). # Summary data #### maxv &lt;- ceiling(max(profile$MEA)) # Get a peak MW minv &lt;- floor(min(profile$MEA)) # Get a min MW energy &lt;- sum(profile$MEA)/2000 # Calculate the energy The peak and minimum MW days are also needed to assess in order to provide the maximum and minimum a saled electricity from EGAT to MEA. peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(MEA == max(MEA)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(MEA == min(MEA)) %&gt;% pull(datetime) Load factor is calculated by the energy in equation (3.1) divided a maximum energy. A maximum energy is the peak multiplied by 8760 hours. Result is presented in a percentage. \\[\\begin{equation} LF_{t}=\\frac{Energy_{t}}{Peak_{d,h} * 8760}*100 \\tag{3.2} \\end{equation}\\] Where, \\(LF_{t}\\) denotes the load factor at year \\(t\\) in percentage. \\(Energy_{t}\\) denotes the calculated energy from equation (3.1) at year \\(t\\) in GWh. \\(Peak_{d,h}\\) denotes the peak electricity sale on the date \\(d\\) at time \\(h\\). load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) Create a table to store relevant data. summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table In 2019, the electricity sale to MEA by EGAT reached it peak 9,526 MW on 2019-04-25 14:00:00. The energy (electricity) sale to MEA was 54,939.73 GWh. The summary of the electricity sale to MEA by EGAT in 2019 is given in Table 3.2. Table 3.2: Summary of EGAT sale to MEA in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-04-25 14:00:00 2019-01-01 05:00:00 9526 2748 54939.73 65.84% The 2019 electricity sale profile from EGAT to MEA is illustrated (see Figure 3.1). profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = MEA, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;EGAT sale to MEA (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-3),1000), limits = c(0, round(maxv, -3))) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -3)), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;))+ geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = 0, vjust = 1.5) Figure 3.1: EGAT electricity sale profile to MEA in 2019. Outputs are saved. Outputs are listed as follows: Create a file name mea_egtsle_2019.png Save a plot in a directory using ggsave() function Save profile data in a profiledata list Save figures in a profilefigure list Save summary data in a summarydata list outputfigure &lt;- paste0(outfigdir, &quot;mea_egtsle_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;mea_egtsle_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;mea_egtsle_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_mea_egtsle_2019&quot; = summary)) 3.1.2 The 2019 Provincial Electricity Authority (PEA) EGAT sale profiles 3.1.2.1 The 2019 PEA-R1 (Central region) EGAT sale profile Read a profile data profile &lt;- read_excel(&quot;raw_data/raw_data_profiles/02_Hourly Sale_NetGen_2019.xlsx&quot;, sheet = &quot;Load Curve&quot;, range = &quot;C3:E17523&quot; ) %&gt;% select(datetime = `Date/Time`, PEA_R1) %&gt;% mutate(date = date(datetime), time = format(as.POSIXct(datetime),&quot;%H:%M:%S&quot;), year = year(datetime), month = month(datetime), day = day(datetime)) %&gt;% select(datetime, date, time, year, month, day, PEA_R1) Table 3.3: The 2019 EGAT sale to PEA R1 profile datetime date time year month day PEA_R1 2019-01-01 00:00:00 2019-01-01 00:00:00 2019 1 1 5036.982 2019-01-01 00:30:00 2019-01-01 00:30:00 2019 1 1 4907.355 2019-01-01 01:00:00 2019-01-01 01:00:00 2019 1 1 4929.126 2019-01-01 01:30:00 2019-01-01 01:30:00 2019 1 1 4793.341 2019-01-01 02:00:00 2019-01-01 02:00:00 2019 1 1 4789.811 maxv &lt;- ceiling(max(profile$PEA_R1)) # Get a peak MW minv &lt;- floor(min(profile$PEA_R1)) # Get a min MW energy &lt;- sum(profile$PEA_R1)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(PEA_R1 == max(PEA_R1)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(PEA_R1 == min(PEA_R1)) %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) Table 3.4: Summary of EGAT sale to PEA R1 in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-05-03 23:00:00 2019-01-01 12:00:00 11936 3293 80961.36 77.43% The 2019 electricity sale profile from EGAT to PEA-R1 is illustrated (see Figure 3.2). profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = PEA_R1, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;EGAT sale to PEA R1 (Central region) (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-3),1000), limits = c(0, round(maxv, -3))) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -3)), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;))+ geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = 0, vjust = 1.5) Figure 3.2: EGAT electricity sale profile to PEA-R1 in 2019. outputfigure &lt;- paste0(outfigdir, &quot;pea_r1_central_egtsle_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;pea_r1_central_egtsle_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;pea_r1_central_egtsle_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_pea_r1_central_egtsle_2019&quot; = summary)) 3.1.2.2 The 2019 PEA-R2 (North Eastern region) EGAT sale profile # Profile data #### profile &lt;- read_excel(&quot;raw_data/raw_data_profiles/02_Hourly Sale_NetGen_2019.xlsx&quot;, sheet = &quot;Load Curve&quot;, range = &quot;C3:F17523&quot; ) %&gt;% select(datetime = `Date/Time`, PEA_R2) %&gt;% mutate(date = date(datetime), time = format(as.POSIXct(datetime),&quot;%H:%M:%S&quot;), year = year(datetime), month = month(datetime), day = day(datetime)) %&gt;% select(datetime, date, time, year, month, day, PEA_R2) #%&gt;% # mutate(strdatetime = as.factor(strptime(glue(&quot;{year}-{month}-{day} {time}&quot;), &quot;%Y-%m-%d %H:%M:%S&quot;))) Table 3.5: The 2019 EGAT sale to PEA R2 profile datetime date time year month day PEA_R2 2019-01-01 00:00:00 2019-01-01 00:00:00 2019 1 1 1459.520 2019-01-01 00:30:00 2019-01-01 00:30:00 2019 1 1 1415.846 2019-01-01 01:00:00 2019-01-01 01:00:00 2019 1 1 1350.192 2019-01-01 01:30:00 2019-01-01 01:30:00 2019 1 1 1287.925 2019-01-01 02:00:00 2019-01-01 02:00:00 2019 1 1 1231.863 # Summary data #### maxv &lt;- ceiling(max(profile$PEA_R2)) # Get a peak MW minv &lt;- floor(min(profile$PEA_R2)) # Get a min MW energy &lt;- sum(profile$PEA_R2)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(PEA_R2 == max(PEA_R2)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(PEA_R2 == min(PEA_R2)) %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 3.6: Summary of EGAT sale to PEA R2 in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-04-20 21:00:00 2019-01-01 12:00:00 3803 970 20007.86 60.06% # Plot a profile #### profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = PEA_R2, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;EGAT sale to PEA R2 (North Eastern region) (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-3),1000), limits = c(0, round(maxv, -3))) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -3)), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;))+ geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = 0, vjust = 1.5) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;pea_r2_northeastern_egtsle_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;pea_r2_northeastern_egtsle_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;pea_r2_northeastern_egtsle_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_pea_r2_northeastern_egtsle_2019&quot; = summary)) The 2019 electricity sale profile from EGAT to PEA-R2 is illustrated in Figure 3.3). Figure 3.3: EGAT electricity sale profile to PEA-R2 in 2019. 3.1.2.3 The 2019 PEA-R3 (Southern region) EGAT sale profile # Profile data #### profile &lt;- read_excel(&quot;raw_data/raw_data_profiles/02_Hourly Sale_NetGen_2019.xlsx&quot;, sheet = &quot;Load Curve&quot;, range = &quot;C3:G17523&quot; ) %&gt;% select(datetime = `Date/Time`, PEA_R3) %&gt;% mutate(date = date(datetime), time = format(as.POSIXct(datetime),&quot;%H:%M:%S&quot;), year = year(datetime), month = month(datetime), day = day(datetime)) %&gt;% select(datetime, date, time, year, month, day, PEA_R3) #%&gt;% # mutate(strdatetime = as.factor(strptime(glue(&quot;{year}-{month}-{day} {time}&quot;), &quot;%Y-%m-%d %H:%M:%S&quot;))) Table 3.7: The 2019 EGAT sale to PEA R3 profile datetime date time year month day PEA_R3 2019-01-01 00:00:00 2019-01-01 00:00:00 2019 1 1 1641.250 2019-01-01 00:30:00 2019-01-01 00:30:00 2019 1 1 1601.345 2019-01-01 01:00:00 2019-01-01 01:00:00 2019 1 1 1593.385 2019-01-01 01:30:00 2019-01-01 01:30:00 2019 1 1 1569.930 2019-01-01 02:00:00 2019-01-01 02:00:00 2019 1 1 1535.770 # Summary data #### maxv &lt;- ceiling(max(profile$PEA_R3)) # Get a peak MW minv &lt;- floor(min(profile$PEA_R3)) # Get a min MW energy &lt;- sum(profile$PEA_R3)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(PEA_R3 == max(PEA_R3)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(PEA_R3 == min(PEA_R3)) %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 3.8: Summary of EGAT sale to PEA R3 in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-04-25 19:30:00 2019-01-05 04:00:00 2609 1293 17009.67 74.42% # Plot a profile #### profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = PEA_R3, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;EGAT sale to PEA R3 (Southern region) (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-3),1000), limits = c(0, round(maxv, -3))) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -3)), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;))+ geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = 0, vjust = 1.5) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;pea_r3_southern_egtsle_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;pea_r3_southern_egtsle_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;pea_r3_southern_egtsle_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_pea_r3_southern_egtsle_2019&quot; = summary)) The 2019 electricity sale profile from EGAT to PEA-R3 is illustrated in Figure 3.4). Figure 3.4: EGAT electricity sale profile to PEA-R3 in 2019. 3.1.2.4 The 2019 PEA-R4 (Northern region) EGAT sale profile # Profile data #### profile &lt;- read_excel(&quot;raw_data/raw_data_profiles/02_Hourly Sale_NetGen_2019.xlsx&quot;, sheet = &quot;Load Curve&quot;, range = &quot;C3:H17523&quot; ) %&gt;% select(datetime = `Date/Time`, PEA_R4) %&gt;% mutate(date = date(datetime), time = format(as.POSIXct(datetime),&quot;%H:%M:%S&quot;), year = year(datetime), month = month(datetime), day = day(datetime)) %&gt;% select(datetime, date, time, year, month, day, PEA_R4) #%&gt;% Table 3.9: The 2019 EGAT sale to PEA R4 profile datetime date time year month day PEA_R4 2019-01-01 00:00:00 2019-01-01 00:00:00 2019 1 1 1287.513 2019-01-01 00:30:00 2019-01-01 00:30:00 2019 1 1 1231.703 2019-01-01 01:00:00 2019-01-01 01:00:00 2019 1 1 1195.394 2019-01-01 01:30:00 2019-01-01 01:30:00 2019 1 1 1139.654 2019-01-01 02:00:00 2019-01-01 02:00:00 2019 1 1 1082.499 Table 3.10: Summary of EGAT sale to PEA R4 in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-05-20 21:30:00 2019-12-09 03:30:00 3224 941 16572.57 58.68% # Plot a profile #### profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = PEA_R4, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;EGAT sale to PEA R4 (Northern region) (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-3)*1.2,1000), limits = c(0, round(maxv, -3)*1.2)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -3)*1.2), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;))+ geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = 0.5, vjust = 1.5) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;pea_r4_northern_egtsle_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;pea_r4_northern_egtsle_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;pea_r4_northern_egtsle_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_pea_r4_northern_egtsle_2019&quot; = summary)) The 2019 electricity sale profile from EGAT to PEA-R4 is illustrated in Figure 3.5). Figure 3.5: EGAT electricity sale profile to PEA-R4 in 2019. 3.1.2.5 The 2019 PEA (All regions) EGAT sale profile # Profile data #### profile &lt;- read_excel(&quot;raw_data/raw_data_profiles/02_Hourly Sale_NetGen_2019.xlsx&quot;, sheet = &quot;Load Curve&quot;, range = &quot;C3:I17523&quot; ) %&gt;% select(datetime = `Date/Time`, PEA) %&gt;% mutate(date = date(datetime), time = format(as.POSIXct(datetime),&quot;%H:%M:%S&quot;), year = year(datetime), month = month(datetime), day = day(datetime)) %&gt;% select(datetime, date, time, year, month, day, PEA) Table 3.11: The 2019 EGAT sale to PEA (all regions) profile datetime date time year month day PEA 2019-01-01 00:00:00 2019-01-01 00:00:00 2019 1 1 9425.265 2019-01-01 00:30:00 2019-01-01 00:30:00 2019 1 1 9156.250 2019-01-01 01:00:00 2019-01-01 01:00:00 2019 1 1 9068.097 2019-01-01 01:30:00 2019-01-01 01:30:00 2019 1 1 8790.850 2019-01-01 02:00:00 2019-01-01 02:00:00 2019 1 1 8639.943 Table 3.12: Summary of EGAT sale to PEA (all regions) in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-04-20 21:00:00 2019-01-01 12:00:00 21151 6877 134551.5 72.62% # Plot a profile #### profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = PEA, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;EGAT sale to PEA (All regions) (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-3)*1.1,1000), limits = c(0, round(maxv, -3)*1.1)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -3)*1.1), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;))+ geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = -0.1, vjust = 1.5) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;pea_allregion_egtsle_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;pea_allregion_egtsle_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;pea_allregion_egtsle_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_pea_allregion_egtsle_2019&quot; = summary)) The 2019 electricity sale profile from EGAT to PEA (all regions) is illustrated in Figure 3.6). Figure 3.6: EGAT electricity sale profile to PEA (all regions) in 2019. 3.1.3 The 2019 Direct Customer (DC) EGAT sale profiles 3.1.3.1 The 2019 DC in in PEA R1 (Central region) EGAT sale profiles # Profile data #### profile &lt;- read_excel(&quot;raw_data/raw_data_profiles/02_Hourly Sale_NetGen_2019.xlsx&quot;, sheet = &quot;Load Curve&quot;, range = &quot;C3:J17523&quot; ) %&gt;% select(datetime = `Date/Time`, DCs_R1) %&gt;% mutate(date = date(datetime), time = format(as.POSIXct(datetime),&quot;%H:%M:%S&quot;), year = year(datetime), month = month(datetime), day = day(datetime)) %&gt;% select(datetime, date, time, year, month, day, DCs_R1) #%&gt;% Table 3.13: The 2019 EGAT sale to direct customer in PEA-R1 profile datetime date time year month day DCs_R1 2019-01-01 00:00:00 2019-01-01 00:00:00 2019 1 1 201.253 2019-01-01 00:30:00 2019-01-01 00:30:00 2019 1 1 202.469 2019-01-01 01:00:00 2019-01-01 01:00:00 2019 1 1 190.028 2019-01-01 01:30:00 2019-01-01 01:30:00 2019 1 1 196.300 2019-01-01 02:00:00 2019-01-01 02:00:00 2019 1 1 177.956 # Summary data #### maxv &lt;- ceiling(max(profile$DCs_R1)) # Get a peak MW minv &lt;- floor(min(profile$DCs_R1)) # Get a min MW energy &lt;- sum(profile$DCs_R1)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(DCs_R1 == max(DCs_R1)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(DCs_R1 == min(DCs_R1)) %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table knitr::kable( summary, caption = &#39;Summary of EGAT sale to direct customer in PEA-R1 in 2019&#39;, booktabs = TRUE ) Table 3.14: Summary of EGAT sale to direct customer in PEA-R1 in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-03-23 05:30:00 2019-09-11 13:00:00 421 81 2006.585 54.41% # Plot a profile #### profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = DCs_R1, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;EGAT sale to direct customers in PEA R1 (Central region) (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-2)*1.2,100), limits = c(0, round(maxv, -2)*1.2)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -2)*1.2), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;))+ geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -2)), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = 0, vjust = 1.5) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;dc_r1_central_egtsle_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;dc_r1_central_egtsle_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;dc_r1_central_egtsle_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_dc_r1_central_egtsle_2019&quot; = summary)) The 2019 electricity sale profile from EGAT to direct customer in PEA-R1 is illustrated in Figure 3.7). Figure 3.7: EGAT electricity sale profile to direct customer in PEA-R1 in 2019. 3.1.3.2 The 2019 DC in in PEA R2 (North Eastern region) EGAT sale profiles # Profile data #### profile &lt;- read_excel(&quot;raw_data/raw_data_profiles/02_Hourly Sale_NetGen_2019.xlsx&quot;, sheet = &quot;Load Curve&quot;, range = &quot;C3:K17523&quot; ) %&gt;% select(datetime = `Date/Time`, DCs_R2) %&gt;% mutate(date = date(datetime), time = format(as.POSIXct(datetime),&quot;%H:%M:%S&quot;), year = year(datetime), month = month(datetime), day = day(datetime)) %&gt;% select(datetime, date, time, year, month, day, DCs_R2) #%&gt;% Table 3.15: The 2019 EGAT sale to direct customer in PEA-R2 profile datetime date time year month day DCs_R2 2019-01-01 00:00:00 2019-01-01 00:00:00 2019 1 1 45.91 2019-01-01 00:30:00 2019-01-01 00:30:00 2019 1 1 74.97 2019-01-01 01:00:00 2019-01-01 01:00:00 2019 1 1 72.34 2019-01-01 01:30:00 2019-01-01 01:30:00 2019 1 1 70.17 2019-01-01 02:00:00 2019-01-01 02:00:00 2019 1 1 68.94 # Summary data #### maxv &lt;- ceiling(max(profile$DCs_R2)) # Get a peak MW minv &lt;- floor(min(profile$DCs_R2)) # Get a min MW energy &lt;- sum(profile$DCs_R2)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(DCs_R2 == max(DCs_R2)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(DCs_R2 == min(DCs_R2)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 3.16: Summary of EGAT sale to direct customer in PEA-R2 in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-05-20 22:30:00 2019-09-17 07:30:00 609 0 1300.891 24.38% # Plot a profile #### profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = DCs_R2, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;EGAT sale to direct customers in PEA R2 (North Eastern region) (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-2)*1.2,100), limits = c(0, round(maxv, -2)*1.2)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -2)*1.1), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;))+ geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -2)), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = 0, vjust = 0) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;dc_r2_northeastern_egtsle_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;dc_r2_northeastern_egtsle_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;dc_r2_northeastern_egtsle_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_dc_r2_northeastern_egtsle_2019&quot; = summary)) The 2019 electricity sale profile from EGAT to direct customer in PEA-R2 is illustrated in Figure 3.8). Figure 3.8: EGAT electricity sale profile to direct customer in PEA-R2 in 2019. 3.1.3.3 The 2019 DC in in PEA R3 (Southern region) EGAT sale profiles # Profile data #### profile &lt;- read_excel(&quot;raw_data/raw_data_profiles/02_Hourly Sale_NetGen_2019.xlsx&quot;, sheet = &quot;Load Curve&quot;, range = &quot;C3:L17523&quot; ) %&gt;% select(datetime = `Date/Time`, DCs_R3) %&gt;% mutate(date = date(datetime), time = format(as.POSIXct(datetime),&quot;%H:%M:%S&quot;), year = year(datetime), month = month(datetime), day = day(datetime)) %&gt;% select(datetime, date, time, year, month, day, DCs_R3) #%&gt;% Table 3.17: The 2019 EGAT sale to direct customer in PEA-R3 profile datetime date time year month day DCs_R3 2019-01-01 00:00:00 2019-01-01 00:00:00 2019 1 1 17.170 2019-01-01 00:30:00 2019-01-01 00:30:00 2019 1 1 16.990 2019-01-01 01:00:00 2019-01-01 01:00:00 2019 1 1 16.455 2019-01-01 01:30:00 2019-01-01 01:30:00 2019 1 1 17.045 2019-01-01 02:00:00 2019-01-01 02:00:00 2019 1 1 16.760 # Summary data #### maxv &lt;- ceiling(max(profile$DCs_R3)) # Get a peak MW minv &lt;- floor(min(profile$DCs_R3)) # Get a min MW energy &lt;- sum(profile$DCs_R3)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(DCs_R3 == max(DCs_R3)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(DCs_R3 == min(DCs_R3)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 3.18: Summary of EGAT sale to direct customer in PEA-R3 in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-12-14 15:00:00 2019-03-30 14:30:00 253 0 419.8491 18.94% # Plot a profile #### profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = DCs_R3, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;EGAT sale to direct customers in PEA R3 (Southern region) (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-2),100), limits = c(0, round(maxv, -2))) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -2)), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;))+ geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -2)), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = 0, vjust = 0) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;dc_r3_southern_egtsle_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;dc_r3_southern_egtsle_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;dc_r3_southern_egtsle_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_dc_r3_southern_egtsle_2019&quot; = summary)) The 2019 electricity sale profile from EGAT to direct customer in PEA-R3 is illustrated in Figure 3.9). Figure 3.9: EGAT electricity sale profile to direct customer in PEA-R3 in 2019. 3.1.3.4 The 2019 DC in in PEA R4 (Northern region) EGAT sale profiles # Profile data #### profile &lt;- read_excel(&quot;raw_data/raw_data_profiles/02_Hourly Sale_NetGen_2019.xlsx&quot;, sheet = &quot;Load Curve&quot;, range = &quot;C3:M17523&quot; ) %&gt;% select(datetime = `Date/Time`, DCs_R4) %&gt;% mutate(date = date(datetime), time = format(as.POSIXct(datetime),&quot;%H:%M:%S&quot;), year = year(datetime), month = month(datetime), day = day(datetime)) %&gt;% select(datetime, date, time, year, month, day, DCs_R4) #%&gt;% Table 3.19: The 2019 EGAT sale to direct customer in PEA-R4 profile datetime date time year month day DCs_R4 2019-01-01 00:00:00 2019-01-01 00:00:00 2019 1 1 18.341 2019-01-01 00:30:00 2019-01-01 00:30:00 2019 1 1 20.824 2019-01-01 01:00:00 2019-01-01 01:00:00 2019 1 1 20.921 2019-01-01 01:30:00 2019-01-01 01:30:00 2019 1 1 28.174 2019-01-01 02:00:00 2019-01-01 02:00:00 2019 1 1 24.071 # Summary data #### maxv &lt;- ceiling(max(profile$DCs_R4)) # Get a peak MW minv &lt;- floor(min(profile$DCs_R4)) # Get a min MW energy &lt;- sum(profile$DCs_R4)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(DCs_R4 == max(DCs_R4)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(DCs_R4 == min(DCs_R4)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 3.20: Summary of EGAT sale to direct customer in PEA-R4 in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-02-02 16:00:00 2019-12-31 10:30:00 67 0 250.4462 42.67% # Plot a profile #### profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = DCs_R4, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;EGAT sale to direct customers in PEA R4 (Northern region) (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-1),10), limits = c(0, round(maxv, -1))) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -1)), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), hjust = 0.5) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -1)), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = 1, vjust = -0.5) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;dc_r4_northern_egtsle_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;dc_r4_northern_egtsle_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;dc_r4_northern_egtsle_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;dc_r4_northern_egtsle_2019&quot; = summary)) The 2019 electricity sale profile from EGAT to direct customer in PEA-R4 is illustrated in Figure 3.10). Figure 3.10: EGAT electricity sale profile to direct customer in PEA-R4 in 2019. 3.1.3.5 The 2019 DC in in PEA (All regions) EGAT sale profiles # Profile data #### profile &lt;- read_excel(&quot;raw_data/raw_data_profiles/02_Hourly Sale_NetGen_2019.xlsx&quot;, sheet = &quot;Load Curve&quot;, range = &quot;C3:N17523&quot; ) %&gt;% select(datetime = `Date/Time`, DCs) %&gt;% mutate(date = date(datetime), time = format(as.POSIXct(datetime),&quot;%H:%M:%S&quot;), year = year(datetime), month = month(datetime), day = day(datetime)) %&gt;% select(datetime, date, time, year, month, day, DCs) #%&gt;% Table 3.21: The 2019 EGAT sale to direct customer in PEA (all regions) profile datetime date time year month day DCs 2019-01-01 00:00:00 2019-01-01 00:00:00 2019 1 1 282.674 2019-01-01 00:30:00 2019-01-01 00:30:00 2019 1 1 315.253 2019-01-01 01:00:00 2019-01-01 01:00:00 2019 1 1 299.744 2019-01-01 01:30:00 2019-01-01 01:30:00 2019 1 1 311.689 2019-01-01 02:00:00 2019-01-01 02:00:00 2019 1 1 287.727 # Summary data #### maxv &lt;- ceiling(max(profile$DCs)) # Get a peak MW minv &lt;- floor(min(profile$DCs)) # Get a min MW energy &lt;- sum(profile$DCs)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(DCs == max(DCs)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(DCs == min(DCs)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 3.22: Summary of EGAT sale to direct customer in PEA (all regions) in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-12-14 10:00:00 2019-07-10 16:30:00 1043 111 3977.771 43.54% # Plot a profile #### profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = DCs, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;EGAT sale to direct customers in PEA (All regions) (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-2)*1.2,100), limits = c(0, round(maxv, -2)*1.2)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -2)*1.2), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), hjust = 0.5, vjust = 1.5) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -2)), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), # hjust = 0, vjust = 1) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;dc_allregions_egtsle_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;dc_allregions_egtsle_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;dc_allregions_egtsle_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_dc_allregions_egtsle_2019&quot; = summary)) The 2019 electricity sale profile from EGAT to direct customer in PEA (all regions) is illustrated in Figure 3.11). Figure 3.11: EGAT electricity sale profile to direct customer in PEA (all regions) in 2019. 3.1.4 The 2019 PEA R1 &amp; DC R1 (Central region) EGAT electrity sale profiles The electricity profile in PEA region is combined the electricity profile in PEA regions (see section 3.1.2) and DC in PEA regions (see section 3.1.3) \\[\\begin{equation} Prf_{r,t,h}=\\ Prf_{PEA,t,h} + Prf_{DC,t,h} \\tag{3.3} \\end{equation}\\] Where, \\(Prf_{r,t,h}\\) denotes an calculated profile in region \\(r\\), year \\(t\\), and time \\(h\\) (MW). \\(Prf_{PEA,t,h}\\) denotes a profile in \\(PEA\\) from each region in year \\(t\\) at time \\(h\\) (MW). \\(Prf_{DC,t,h}\\) denotes a profile from direct customer (\\(DC\\)) in each PEA region in year \\(t\\) at time \\(h\\) (MW). # Profile data #### profile &lt;- profiledata$pea_r1_central_egtsle_2019%&gt;% mutate(dc_r1 = profiledata$dc_r1_central_egtsle_2019$DCs_R1, r1_egt_sle = PEA_R1 + dc_r1) %&gt;% select(-PEA_R1, -dc_r1) Table 3.23: The 2019 EGAT sale to PEA R1 and direct customer in PEA R1 profile datetime date time year month day r1_egt_sle 2019-01-01 00:00:00 2019-01-01 00:00:00 2019 1 1 5238.235 2019-01-01 00:30:00 2019-01-01 00:30:00 2019 1 1 5109.824 2019-01-01 01:00:00 2019-01-01 01:00:00 2019 1 1 5119.154 2019-01-01 01:30:00 2019-01-01 01:30:00 2019 1 1 4989.641 2019-01-01 02:00:00 2019-01-01 02:00:00 2019 1 1 4967.767 # Summary data #### maxv &lt;- ceiling(max(profile$r1_egt_sle)) # Get a peak MW minv &lt;- floor(min(profile$r1_egt_sle)) # Get a min MW energy &lt;- sum(profile$r1_egt_sle)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(r1_egt_sle == max(r1_egt_sle)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(r1_egt_sle == min(r1_egt_sle)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 3.24: Summary of EGAT sale to PEA R1 and direct customer in PEA R1 in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-05-03 23:00:00 2019-01-01 12:00:00 12245 3492 82967.95 77.35% # Plot a profile #### profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = r1_egt_sle, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;EGAT sale to PEA R1 &amp; direct customers (Central region) (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-3)*1.1,1000), limits = c(0, round(maxv, -3)*1.1)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -3)*1.1), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), hjust = 0.5) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)*1.1), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = -0.05, vjust = 0.5) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;r1+dcr1_egtsle_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;r1+dcr1_egtsle_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;r1+dcr1_egtsle_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_r1+dcr1_egtsle_2019&quot; = summary)) The 2019 electricity sale profile from EGAT to PEA R1 and direct customer in PEA R1 is illustrated in Figure 3.12. The electricity EGAT sale profiles of PEA R1 and direct customer in PEA R1 are illustrated in Figure 3.2 and 3.7, respectively. Figure 3.12: EGAT electricity sale profile to PEA R1 and direct customer in PEA R1 in 2019. 3.1.5 The 2019 PEA R2 &amp; DC R2 (North Eastern region) EGAT electrity sale profiles # Profile data #### profile &lt;- profiledata$pea_r2_northeastern_egtsle_2019%&gt;% mutate(dc_r2 = profiledata$dc_r2_northeastern_egtsle_2019$DCs_R2, r2_egt_sle = PEA_R2 + dc_r2) %&gt;% select(-PEA_R2, -dc_r2) Table 3.25: The 2019 EGAT sale to PEA R2 and direct customer in PEA R2 profile datetime date time year month day r2_egt_sle 2019-01-01 00:00:00 2019-01-01 00:00:00 2019 1 1 1505.430 2019-01-01 00:30:00 2019-01-01 00:30:00 2019 1 1 1490.816 2019-01-01 01:00:00 2019-01-01 01:00:00 2019 1 1 1422.532 2019-01-01 01:30:00 2019-01-01 01:30:00 2019 1 1 1358.095 2019-01-01 02:00:00 2019-01-01 02:00:00 2019 1 1 1300.803 # Summary data #### maxv &lt;- ceiling(max(profile$r2_egt_sle)) # Get a peak MW minv &lt;- floor(min(profile$r2_egt_sle)) # Get a min MW energy &lt;- sum(profile$r2_egt_sle)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(r2_egt_sle == max(r2_egt_sle)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(r2_egt_sle == min(r2_egt_sle)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 3.26: Summary of EGAT sale to PEA R2 and direct customer in PEA R2 in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-04-20 22:00:00 2019-01-01 13:00:00 4043 990 21308.75 60.17% profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = r2_egt_sle, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;EGAT sale to PEA R2 &amp; direct customers (Northern Eastern region) (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-3)*1.1,1000), limits = c(0, round(maxv, -3)*1.1)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -3)*1.1), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), hjust = 0.5) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)*1.1), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = -0.05, vjust = 0.5) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;r2+dcr2_egtsle_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;r2+dcr2_egtsle_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;r2+dcr2_egtsle_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_r2+dcr2_egtsle_2019&quot; = summary)) The 2019 electricity sale profile from EGAT to PEA R2 and direct customer in PEA R2 is illustrated in Figure 3.13. The electricity EGAT sale profiles of PEA R2 and direct customer in PEA R2 are illustrated in Figure 3.3 and 3.8, respectively. Figure 3.13: EGAT electricity sale profile to PEA R2 and direct customer in PEA R2 in 2019. 3.1.6 The 2019 PEA R3 &amp; DC R3 (Southern region) EGAT electrity sale profiles profile &lt;- profiledata$pea_r3_southern_egtsle_2019%&gt;% mutate(dc_r3 = profiledata$dc_r3_southern_egtsle_2019$DCs_R3, r3_egt_sle = PEA_R3 + dc_r3) %&gt;% select(-PEA_R3, -dc_r3) Table 3.27: The 2019 EGAT sale to PEA R3 and direct customer in PEA R3 profile datetime date time year month day r3_egt_sle 2019-01-01 00:00:00 2019-01-01 00:00:00 2019 1 1 1658.420 2019-01-01 00:30:00 2019-01-01 00:30:00 2019 1 1 1618.335 2019-01-01 01:00:00 2019-01-01 01:00:00 2019 1 1 1609.840 2019-01-01 01:30:00 2019-01-01 01:30:00 2019 1 1 1586.975 2019-01-01 02:00:00 2019-01-01 02:00:00 2019 1 1 1552.530 # Summary data #### maxv &lt;- ceiling(max(profile$r3_egt_sle)) # Get a peak MW minv &lt;- floor(min(profile$r3_egt_sle)) # Get a min MW energy &lt;- sum(profile$r3_egt_sle)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(r3_egt_sle == max(r3_egt_sle)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(r3_egt_sle == min(r3_egt_sle)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 3.28: Summary of EGAT sale to PEA R3 and direct customer in PEA R3 in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-04-20 19:30:00 2019-01-05 04:00:00 2673 1309 17429.52 74.44% profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = r3_egt_sle, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;EGAT sale to PEA R3 &amp; direct customers (Southern region) (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-3),1000), limits = c(0, round(maxv, -3))) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -3)), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), hjust = 0.5) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)*1.1), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = -0.05, vjust = 0.5) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;r3+dcr3_egtsle_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;r3+dcr3_egtsle_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;r3+dcr3_egtsle_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_r3+dcr3_egtsle_2019&quot; = summary)) The 2019 electricity sale profile from EGAT to PEA R3 and direct customer in PEA R3 is illustrated in Figure 3.14. The electricity EGAT sale profiles of PEA R3 and direct customer in PEA R3 are illustrated in Figure 3.4 and 3.9, respectively. Figure 3.14: EGAT electricity sale profile to PEA R3 and direct customer in PEA R3 in 2019. 3.1.7 The 2019 PEA R4 &amp; DC R4 (Southern region) EGAT electrity sale profiles profile &lt;- profiledata$pea_r4_northern_egtsle_2019%&gt;% mutate(dc_r4 = profiledata$dc_r4_northern_egtsle_2019$DCs_R4, r4_egt_sle = PEA_R4 + dc_r4) %&gt;% select(-PEA_R4, -dc_r4) Table 3.29: The 2019 EGAT sale to PEA R4 and direct customer in PEA R4 profile datetime date time year month day r4_egt_sle 2019-01-01 00:00:00 2019-01-01 00:00:00 2019 1 1 1305.854 2019-01-01 00:30:00 2019-01-01 00:30:00 2019 1 1 1252.527 2019-01-01 01:00:00 2019-01-01 01:00:00 2019 1 1 1216.315 2019-01-01 01:30:00 2019-01-01 01:30:00 2019 1 1 1167.828 2019-01-01 02:00:00 2019-01-01 02:00:00 2019 1 1 1106.570 # Summary data #### maxv &lt;- ceiling(max(profile$r4_egt_sle)) # Get a peak MW minv &lt;- floor(min(profile$r4_egt_sle)) # Get a min MW energy &lt;- sum(profile$r4_egt_sle)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(r4_egt_sle == max(r4_egt_sle)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(r4_egt_sle == min(r4_egt_sle)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 3.30: Summary of EGAT sale to PEA R4 and direct customer in PEA R4 in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-05-20 21:30:00 2019-12-09 03:00:00 3275 978 16823.01 58.64% profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = r4_egt_sle, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;EGAT sale to PEA R4 &amp; direct customers (Northern region) (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-3)*1.2,1000), limits = c(0, round(maxv, -3)*1.2)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -3)*1.2), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), hjust = 0.5) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)*1.1), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = 1, vjust = 1) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;r4+dcr4_egtsle_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;r4+dcr4_egtsle_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;r4+dcr4_egtsle_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_r4+dcr4_egtsle_2019&quot; = summary)) The 2019 electricity sale profile from EGAT to PEA R4 and direct customer in PEA R4 is illustrated in Figure 3.15. The electricity EGAT sale profiles of PEA R4 and direct customer in PEA R4 are illustrated in Figure 3.5 and 3.10, respectively. Figure 3.15: EGAT electricity sale profile to PEA R4 and direct customer in PEA R4 in 2019. 3.1.8 The 2019 EGAT electrity sale profiles This section provides a combined EGAT electricity sale profile. The equation is given in equation (3.4) \\[\\begin{equation} EGTSLE_{t,h}=\\ MEA_{t,h} + \\sum_{i=1}^{4} (PEA_{i,t,h} + DC_{i,t,h}) \\tag{3.4} \\end{equation}\\] Where, \\(EGTSLE_{t,h}\\) denotes the electricity EGAT sale (\\(EGTSLE\\)) profile in year \\(t\\) at time stamp \\(h\\) (MW). \\(MEA_{t,h}\\) denotes the electricity EGAT sale profile to \\(MEA\\) in year \\(t\\) at time stamp \\(h\\) (MW). \\(PEA_{i,t,h}\\) denotes the electricity EGAT sale profile to \\(PEA\\) in region \\(i\\) in year \\(t\\) at time stamp \\(h\\) (MW). \\(DC_{i,t,h}\\) denotes the electricity EGAT sale profile to direct customer (\\(DC\\)) in region \\(i\\) in year \\(t\\) at time stamp \\(h\\) (MW). profile &lt;- profiledata$mea_egtsle_2019%&gt;% mutate(r1_dc1 = profiledata$&quot;r1+dcr1_egtsle_2019&quot;$r1_egt_sle, r2_dc2 = profiledata$&quot;r2+dcr2_egtsle_2019&quot;$r2_egt_sle, r3_dc3 = profiledata$&quot;r3+dcr3_egtsle_2019&quot;$r3_egt_sle, r4_dc4 = profiledata$&quot;r4+dcr4_egtsle_2019&quot;$r4_egt_sle, egt_sle = MEA + r1_dc1 + r2_dc2 + r3_dc3 + r4_dc4) Table 3.31: The 2019 electricity EGAT sale profile datetime date time year month day MEA r1_dc1 r2_dc2 r3_dc3 r4_dc4 egt_sle 2019-01-01 00:00:00 2019-01-01 00:00:00 2019 1 1 3361.083 5238.235 1505.430 1658.420 1305.854 13069.02 2019-01-01 00:30:00 2019-01-01 00:30:00 2019 1 1 3244.405 5109.824 1490.816 1618.335 1252.527 12715.91 2019-01-01 01:00:00 2019-01-01 01:00:00 2019 1 1 3199.672 5119.154 1422.532 1609.840 1216.315 12567.51 2019-01-01 01:30:00 2019-01-01 01:30:00 2019 1 1 3153.101 4989.641 1358.095 1586.975 1167.828 12255.64 2019-01-01 02:00:00 2019-01-01 02:00:00 2019 1 1 3085.642 4967.767 1300.803 1552.530 1106.570 12013.31 # Summary data #### maxv &lt;- ceiling(max(profile$egt_sle)) # Get a peak MW minv &lt;- floor(min(profile$egt_sle)) # Get a min MW energy &lt;- sum(profile$egt_sle)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(egt_sle == max(egt_sle)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(egt_sle == min(egt_sle)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 3.32: Summary of EGAT sale in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-05-02 22:30:00 2019-01-01 12:00:00 29962 10484 193469 73.71% profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = egt_sle, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;EGAT sale (MEA&amp;PEA&amp;DCs) (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-3)*1.1,2000), limits = c(0, round(maxv, -3)*1.1)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -3)*1.1), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), hjust = 0.5) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)*1.1), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = -0.1, vjust = 1) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;egtsle_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;egtsle_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;egtsle_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_egtsle_2019&quot; = summary)) The 2019 electricity EGAT sale profile is illustrated in Figure 3.16. Figure 3.16: EGAT electricity sale profile 2019. 3.2 The electrity requirement profiles 3.2.1 The 2019 MEA requirement profile profile &lt;- read_excel(&quot;raw_data/raw_data_profiles/02_Hourly Sale_NetGen_2019.xlsx&quot;, sheet = &quot;Load Curve&quot;, range = &quot;AG3:AN17523&quot; ) %&gt;% select(datetime = `Date/Time`, MAC) %&gt;% mutate(date = date(datetime), time = format(as.POSIXct(datetime),&quot;%H:%M:%S&quot;), year = year(datetime), month = month(datetime), day = day(datetime)) %&gt;% select(datetime, date, time, year, month, day, MAC) # Summary data #### maxv &lt;- ceiling(max(profile$MAC)) # Get a peak MW minv &lt;- floor(min(profile$MAC)) # Get a min MW energy &lt;- sum(profile$MAC)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(MAC == max(MAC)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(MAC == min(MAC)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) Table 3.33: Summary of a MEA requirement in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-04-25 13:49:00 2019-01-01 07:00:00 10994 3191 64259.51 66.72% # Plot a profile #### profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = MAC, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;MEA Electricity requirement (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-3)*1.1,2000), limits = c(0, round(maxv, -3)*1.1)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -3)*1.1), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), hjust = 0.5) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)*1.1), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = -0.1, vjust = 1) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;mea_requirement_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;mea_requirement_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;mea_requirement_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_mea_requirement_2019&quot; = summary)) The 2019 MEA requirement profile is illustrated in Figure 3.17. Figure 3.17: MEA electricity requirment profile in 2019. ###The 2019 PEA R1 (Central region) requirement for EGAT NET electricity generation profile profile &lt;- read_excel(&quot;raw_data/raw_data_profiles/02_Hourly Sale_NetGen_2019.xlsx&quot;, sheet = &quot;Load Curve&quot;, range = &quot;AG3:AN17523&quot; ) %&gt;% select(datetime = `Date/Time`, CAC) %&gt;% mutate(date = date(datetime), time = format(as.POSIXct(datetime),&quot;%H:%M:%S&quot;), year = year(datetime), month = month(datetime), day = day(datetime)) %&gt;% select(datetime, date, time, year, month, day, CAC) # Summary data #### maxv &lt;- ceiling(max(profile$CAC)) # Get a peak MW minv &lt;- floor(min(profile$CAC)) # Get a min MW energy &lt;- sum(profile$CAC)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(CAC == max(CAC)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(CAC == min(CAC)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 3.34: Summary of a PEA R1 requirement in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-06-22 20:58:00 2019-01-01 11:30:00 11319 3033 73957.8 74.59% # Plot a profile #### profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = CAC, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;PEA R1 (Central region) Electricity requirement (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-3)*1.1,2000), limits = c(0, round(maxv, -3)*1.1)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -3)*1.1), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), hjust = 0.5) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)*1.1), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = -0.1, vjust = 1) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;r1_central_requirement_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;r1_central_requirement_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;r1_central_requirement_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_r1_central_requirement_2019&quot; = summary)) The 2019 PEA R1 requirement profile is illustrated in Figure 3.18. Figure 3.18: The electricity requirement profile from PEA R1 in 2019. 3.2.2 The 2019 PEA R2 (North eastern region) requirement profile &lt;- read_excel(&quot;raw_data/raw_data_profiles/02_Hourly Sale_NetGen_2019.xlsx&quot;, sheet = &quot;Load Curve&quot;, range = &quot;AG3:AN17523&quot; ) %&gt;% select(datetime = `Date/Time`, NEC) %&gt;% mutate(date = date(datetime), time = format(as.POSIXct(datetime),&quot;%H:%M:%S&quot;), year = year(datetime), month = month(datetime), day = day(datetime)) %&gt;% select(datetime, date, time, year, month, day, NEC) # Summary data #### maxv &lt;- ceiling(max(profile$NEC)) # Get a peak MW minv &lt;- floor(min(profile$NEC)) # Get a min MW energy &lt;- sum(profile$NEC)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(NEC == max(NEC)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(NEC == min(NEC)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 3.35: Summary of a PEA R2 requirement in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-06-22 20:54:00 2019-01-01 12:00:00 3972 968 21487.89 61.76% profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = NEC, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;PEA R2 (North Eastern region) Electricity requirement (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-3)*1.1,1000), limits = c(0, round(maxv, -3)*1.1)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -3)*1.1), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), hjust = 0.5) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)*1.1), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = -0.1, vjust = 1) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;r2_northeastern_requirement_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;r2_northeastern_requirement_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;r2_northeastern_requirement_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_r2_northeastern_requirement_2019&quot; = summary)) The 2019 PEA R2 requirement profile is illustrated in Figure 3.19. Figure 3.19: The electricity requirement profile from PEA R2 in 2019. 3.2.3 The 2019 PEA R3 (Southern region) requirement profile &lt;- read_excel(&quot;raw_data/raw_data_profiles/02_Hourly Sale_NetGen_2019.xlsx&quot;, sheet = &quot;Load Curve&quot;, range = &quot;AG3:AN17523&quot; ) %&gt;% select(datetime = `Date/Time`, SAC) %&gt;% mutate(date = date(datetime), time = format(as.POSIXct(datetime),&quot;%H:%M:%S&quot;), year = year(datetime), month = month(datetime), day = day(datetime)) %&gt;% select(datetime, date, time, year, month, day, SAC) # Summary data #### maxv &lt;- ceiling(max(profile$SAC)) # Get a peak MW minv &lt;- floor(min(profile$SAC)) # Get a min MW energy &lt;- sum(profile$SAC)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(SAC == max(SAC)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(SAC == min(SAC)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 3.36: Summary of a PEA R3 requirement in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-04-21 20:39:00 2019-01-05 04:00:00 2727 1328 17772.2 74.40% profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = SAC, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;PEA R3 (Southern region) Electricity requirement (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-3)*1.1,1000), limits = c(0, round(maxv, -3)*1.1)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -3)), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), hjust = 0.5) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)*1.4), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = -0.1, vjust = 1) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;r3_southern_requirement_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;r3_southern_requirement_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;r3_southern_requirement_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_r3_southern_requirement_2019&quot; = summary)) The 2019 PEA R3 requirement profile is illustrated in Figure 3.20. Figure 3.20: The electricity requirement profile from PEA R3 in 2019. 3.2.4 The 2019 PEA R4 (Northern region) requirement profile &lt;- read_excel(&quot;raw_data/raw_data_profiles/02_Hourly Sale_NetGen_2019.xlsx&quot;, sheet = &quot;Load Curve&quot;, range = &quot;AG3:AN17523&quot; ) %&gt;% select(datetime = `Date/Time`, NAC) %&gt;% mutate(date = date(datetime), time = format(as.POSIXct(datetime),&quot;%H:%M:%S&quot;), year = year(datetime), month = month(datetime), day = day(datetime)) %&gt;% select(datetime, date, time, year, month, day, NAC) # Summary data #### maxv &lt;- ceiling(max(profile$NAC)) # Get a peak MW minv &lt;- floor(min(profile$NAC)) # Get a min MW energy &lt;- sum(profile$NAC)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(NAC == max(NAC)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(NAC == min(NAC)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 3.37: Summary of a PEA R4 requirement in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-05-20 21:01:00 2019-12-09 04:00:00 3431 1053 17577.7 58.48% profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = NAC, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;PEA R4 (Northern region) Electricity requirement (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-3)*1.4,1000), limits = c(0, round(maxv, -3)*1.4)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -3)*1.2), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), hjust = 0.5) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)*1.4), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = 1, vjust = 2.5) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;r4_northern_requirement_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;r4_northern_requirement_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;r4_northern_requirement_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_r4_northern_requirement_2019&quot; = summary)) The 2019 PEA R4 requirement profile is illustrated in Figure 3.21. Figure 3.21: The electricity requirement profile from PEA R4 in 2019. 3.2.5 The 2019 Export TNB (Export to Malaysia) requirement profile &lt;- read_excel(&quot;raw_data/raw_data_profiles/02_Hourly Sale_NetGen_2019.xlsx&quot;, sheet = &quot;Load Curve&quot;, range = &quot;AG3:AN17523&quot; ) %&gt;% select(datetime = &quot;Date/Time&quot;, export_tnb = &quot;Export TNB&quot;) %&gt;% mutate(date = date(datetime), time = format(as.POSIXct(datetime),&quot;%H:%M:%S&quot;), year = year(datetime), month = month(datetime), day = day(datetime)) %&gt;% select(datetime, date, time, year, month, day, export_tnb) # Summary data #### maxv &lt;- ceiling(max(profile$export_tnb)) # Get a peak MW minv &lt;- floor(min(profile$export_tnb)) # Get a min MW energy &lt;- sum(profile$export_tnb)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(export_tnb == max(export_tnb)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(export_tnb == min(export_tnb)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 3.38: Summary of a TNB requirement in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-12-18 18:22:00 2019-12-31 23:30:00 283 0 167.823 6.77% profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = export_tnb, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;Export to TNB (Malaysia) Electricity requirement (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-1)*1.2,50), limits = c(0, round(maxv, -1)*1.2)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -1)*1.1), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), hjust = 0.5) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -1)*1.2), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = 1, vjust = 0) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;export_TNB_requirement_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;export_TNB_requirement_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;export_TNB_requirement_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_export_TNB_requirement_2019&quot; = summary)) The 2019 TNB requirement profile is illustrated in Figure 3.22. Figure 3.22: The electricity requirement profile from TNB in 2019. 3.2.6 The 2019 Export EDL (Export to Cambodia) requirement profile &lt;- read_excel(&quot;raw_data/raw_data_profiles/02_Hourly Sale_NetGen_2019.xlsx&quot;, sheet = &quot;Load Curve&quot;, range = &quot;AG3:AN17523&quot; ) %&gt;% select(datetime = &quot;Date/Time&quot;, export_edl = &quot;Export EDL&quot;) %&gt;% mutate(date = date(datetime), time = format(as.POSIXct(datetime),&quot;%H:%M:%S&quot;), year = year(datetime), month = month(datetime), day = day(datetime)) %&gt;% select(datetime, date, time, year, month, day, export_edl) # Summary data #### maxv &lt;- ceiling(max(profile$export_edl)) # Get a peak MW minv &lt;- floor(min(profile$export_edl)) # Get a min MW energy &lt;- sum(profile$export_edl)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(export_edl == max(export_edl)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(export_edl == min(export_edl)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 3.39: Summary of a EDL requirement in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-12-13 08:00:00 2019-09-17 07:30:00 893 0 1251.747 16.00% profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = export_edl, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;Export to EDL (Laos) Electricity requirement (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-1)*1.2,50), limits = c(0, round(maxv, -1)*1.2)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -1)*1.1), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), hjust = 0.5) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -1)*1.2), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = 0, vjust = 0) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;export_EDL_requirement_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;export_EDL_requirement_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;export_EDL_requirement_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_export_EDL_requirement_2019&quot; = summary)) The 2019 EDL requirement profile is illustrated in Figure 3.23. Figure 3.23: The electricity requirement profile from EDL in 2019. 3.2.7 The 2019 PEA R2 + Export EDL (North Eastern + Export to Cambodia) requirement profile &lt;- profiledata$r2_northeastern_requirement_2019 %&gt;% mutate(export_edl = profiledata$export_EDL_requirement_2019$export_edl, r2_edl = NEC + export_edl) %&gt;% select(-NEC, -export_edl) # Summary data #### maxv &lt;- ceiling(max(profile$r2_edl)) # Get a peak MW minv &lt;- floor(min(profile$r2_edl)) # Get a min MW energy &lt;- sum(profile$r2_edl)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(r2_edl == max(r2_edl)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(r2_edl == min(r2_edl)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 3.40: Summary of a R2 and EDL requirement in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-06-22 20:54:00 2019-01-01 12:00:00 4314 989 22739.63 60.17% profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = r2_edl, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;R2 &amp; Export to EDL (Laos) Electricity requirement (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-3)*1.3,1000), limits = c(0, round(maxv, -3)*1.3)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -3)*1.2), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), hjust = 0.5) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = 0, vjust = 0) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;r2&amp;export_EDL_requirement_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;r2&amp;export_EDL_requirement_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;r2&amp;export_EDL_requirement_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_r2&amp;export_EDL_requirement_2019&quot; = summary)) The 2019 PEA R2 and EDL requirement profile is illustrated in Figure 3.24. Figure 3.24: The electricity requirement profile from PEA R2 and EDL in 2019. 3.2.8 The 2019 PEA R3 + Export TNB (Southern + Export to Malaysia) requirement profile &lt;- profiledata$r3_southern_requirement_2019 %&gt;% mutate(export_tnb = profiledata$export_TNB_requirement_2019$export_tnb, r3_tnb = SAC + export_tnb) %&gt;% select(-SAC, -export_tnb) # Summary data #### maxv &lt;- ceiling(max(profile$r3_tnb)) # Get a peak MW minv &lt;- floor(min(profile$r3_tnb)) # Get a min MW energy &lt;- sum(profile$r3_tnb)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(r3_tnb == max(r3_tnb)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(r3_tnb == min(r3_tnb)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 3.41: Summary of a R3 and TNB requirement in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-04-21 20:39:00 2019-01-05 04:00:00 2759 1328 17940.03 74.23% profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = r3_tnb, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;R3 &amp; Export to TNB (Malaysia) Electricity requirement (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-3)*1.4,1000), limits = c(0, round(maxv, -3)*1.4)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -3)), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), hjust = 0.5) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = 0, vjust = 0) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;r3&amp;export_TNB_requirement_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;r3&amp;export_TNB_requirement_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;r3&amp;export_TNB_requirement_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_r3&amp;export_TNB_requirement_2019&quot; = summary)) The 2019 R3 and TNB requirement profile is illustrated in Figure 3.25. Figure 3.25: The electricity requirement profile from PEA R3 and TNB in 2019. 3.2.9 The 2019 MEA + PEA R1 (MEA + CAC) requirement profile &lt;- profiledata$mea_requirement_2019 %&gt;% mutate(r1_requirement = profiledata$r1_central_requirement_2019$CAC, mea_r1 = MAC + r1_requirement) %&gt;% select(-MAC, -r1_requirement) # Summary data #### maxv &lt;- ceiling(max(profile$mea_r1)) # Get a peak MW minv &lt;- floor(min(profile$mea_r1)) # Get a min MW energy &lt;- sum(profile$mea_r1)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(mea_r1 == max(mea_r1)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(mea_r1 == min(mea_r1)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 3.42: Summary of a MEA and PEA R1 requirement in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-05-03 14:27:00 2019-01-01 12:00:00 21423 6698 138217.3 73.65% profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = mea_r1, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;MEA &amp; R1 Electricity requirement (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-3)*1.4,1000), limits = c(0, round(maxv, -3)*1.4)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -3)*1.1), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), hjust = 0.5) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)*0.8), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = 0, vjust = 0) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;mea&amp;r1_requirement_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;mea&amp;r1_requirement_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;mea&amp;r1_requirement_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_mea&amp;r1_requirement_2019&quot; = summary)) The 2019 MEA and PEA R1 requirement profile is illustrated in Figure 3.26. Figure 3.26: The electricity requirement profile from MEA and PEA R1 in 2019. 3.3 The 2019 EGAT NET electricity generation profile The EGAT net electricity generation profile is calculated by the summation of the electricity requirement in each region. \\[\\begin{equation} EGTNETGEN_{i,t,h} = MEAReq_{t,h} + \\sum_{i=1}^{4} PEAReq_{i,t,h} + \\sum_{c=1}^{2}EXPReq_{c,t,h} \\tag{3.5} \\end{equation}\\] Where, \\(EGTNETGEN_{i,t,h}\\) denotes the EGAT net electricity generation (\\(EGTNETGEN\\)) profile in region \\(i\\) in year \\(t\\) at time stamp \\(h\\) (MW). \\(MEAReq_{t,h}\\) denotes the MEA requirement profile (\\(MEAReq\\)) in year \\(t\\) at time stamp \\(h\\) (MW). \\(PEAReq_{i,t,h}\\) denotes the PEA requirement (\\(PEAReq\\)) profile in region \\(i\\) in year \\(t\\) at time stamp \\(h\\) (MW). \\(EXPReq_{c,t,h}\\) denotes the electricity requirement from neighboring countries \\(c\\) in year \\(t\\) at time stamp \\(h\\). profile &lt;- profiledata$`mea&amp;r1_requirement_2019` %&gt;% mutate(r2_edl = profiledata$`r2&amp;export_EDL_requirement_2019`$r2_edl, r3_tnb = profiledata$`r3&amp;export_TNB_requirement_2019`$r3_tnb, r4_requirement = profiledata$r4_northern_requirement_2019$NAC, egt_netgen = mea_r1 + r2_edl + r3_tnb + r4_requirement) %&gt;% select(-mea_r1, -r2_edl, -r3_tnb, -r4_requirement) # Summary data #### maxv &lt;- ceiling(max(profile$egt_netgen)) # Get a peak MW minv &lt;- floor(min(profile$egt_netgen)) # Get a min MW energy &lt;- sum(profile$egt_netgen)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(egt_netgen == max(egt_netgen)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(egt_netgen == min(egt_netgen)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 3.43: Summary of a EGAT net generation profile in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-05-02 22:27:00 2019-01-01 12:00:00 30854 10523 196474.7 72.69% profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = egt_netgen, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;EGAT NET Electricity generation (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-3)*1.1,2000), limits = c(0, round(maxv, -3)*1.1)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_text(data = summary, aes(x = peak_day, y = round(maxv, -3)*1.05), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), hjust = 0.5) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)*0.8), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = 0, vjust = 0) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;egt_netgen_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;egt_netgen_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;egt_netgen_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_egt_netgen_2019&quot; = summary)) The 2019 EGAT net genration profile is illustrated in Figure 3.27. Figure 3.27: The EGAT net generation profile in 2019. "],["the-transmission-loss-and-use-profiles.html", "Chapter 4 The transmission loss and use profiles 4.1 The 2019 transmission loss and use profile", " Chapter 4 The transmission loss and use profiles 4.1 The 2019 transmission loss and use profile A transmissions loss profile is calculated from the difference between the EGAT net electricity generation and the EGAT electricity sale profile (see equation (4.1)) \\[\\begin{equation} LSS_{i,t,h} = EGTNETGEN_{i,t,h} - EGTSLE_{i,t,h} \\tag{4.1} \\end{equation}\\] Where, \\(LSS_{i,t,h}\\) denotes a transmission loss profile in region \\(i\\) in year \\(t\\) at time stamp \\(h\\) (MW). \\(EGTNETGEN_{i,t,h}\\) denotes a EGAT net generation profile in region \\(i\\) in year \\(t\\) at time stamp \\(h\\) (MW) (see equation (3.5)). \\(EGTSLE_{i,t,h}\\) denotes the electricity EGAT sale (\\(EGTSLE\\)) profile in year \\(t\\) at time stamp \\(h\\) (MW) (see equation (3.4)). profile &lt;- profiledata$`egt_netgen_2019` %&gt;% mutate(egt_sle = profiledata$egtsle_2019$egt_sle, tran_loss = egt_netgen - egt_sle) %&gt;% select(-egt_netgen, -egt_sle) # Summary data #### maxv &lt;- ceiling(max(profile$tran_loss)) # Get a peak MW minv &lt;- floor(min(profile$tran_loss)) # Get a min MW energy &lt;- sum(profile$tran_loss)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(tran_loss == max(tran_loss)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(tran_loss == min(tran_loss)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 4.1: Summary of a transmission loss profile in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-06-22 19:00:00 2019-01-26 12:00:00 1666 -1017 3005.719 20.60% profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = tran_loss, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;Transmission loss &amp; use (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(round(minv,-3), round(maxv,-3)*1.2,200), limits = c(round(minv,-3)*1.1, round(maxv, -3)*1.1)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_hline(yintercept = 0) + geom_text(data = summary, aes(x = peak_day, y = round(maxv, -3)*1.05), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), hjust = 0.5) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)*0.8), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = 0, vjust = 0) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;tran_loss_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;tran_loss_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;tran_loss_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_tran_loss_2019&quot; = summary)) The 2019 transmission loss profile is illustrated in Figure 4.1. Figure 4.1: Transmission loss profile in 2019. ###The 2019 MEA transmission loss and use profile profile &lt;- profiledata$mea_requirement_2019 %&gt;% mutate(mea_egt_sle = profiledata$mea_egtsle_2019$MEA, mea_tran_loss = MAC - mea_egt_sle) %&gt;% select(-MAC, -mea_egt_sle) # Summary data #### maxv &lt;- ceiling(max(profile$mea_tran_loss)) # Get a peak MW minv &lt;- floor(min(profile$mea_tran_loss)) # Get a min MW energy &lt;- sum(profile$mea_tran_loss)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(mea_tran_loss == max(mea_tran_loss)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(mea_tran_loss == min(mea_tran_loss)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 4.2: Summary of a MEA transmission loss and use profile in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-12-19 08:30:00 2019-07-01 1633 75 9319.783 65.15% profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = mea_tran_loss, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;MEA transmission loss &amp; use (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(round(minv,-3), round(maxv,-3)*1.2,200), limits = c(round(minv,-3)*1.1, round(maxv, -3))) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ # geom_hline(yintercept = 0) + geom_text(data = summary, aes(x = peak_day, y = round(maxv, -3)), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), hjust = 0.8, vjust = 1) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)*0.8), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = 0, vjust = 0) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;mea_tran_loss_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;mea_tran_loss_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;mea_tran_loss_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_mea_tran_loss_2019&quot; = summary)) The 2019 MEA transmission loss and use profile is illustrated in Figure 4.2. Figure 4.2: The MEA transmission loss and use profile in 2019. 4.1.1 The 2019 PEA-R1 (Central region) transmission loss and use profile profile &lt;- profiledata$r1_central_requirement_2019 %&gt;% mutate(r1_egt_sle = profiledata$`r1+dcr1_egtsle_2019`$r1_egt_sle, r1_tran_loss = CAC - r1_egt_sle) %&gt;% select(-CAC, -r1_egt_sle) # Summary data #### maxv &lt;- ceiling(max(profile$r1_tran_loss)) # Get a peak MW minv &lt;- floor(min(profile$r1_tran_loss)) # Get a min MW energy &lt;- sum(profile$r1_tran_loss)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(r1_tran_loss == max(r1_tran_loss)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(r1_tran_loss == min(r1_tran_loss)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) Table 4.3: Summary of a PEA R1 transmission loss and use profile in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-06-30 17:30:00 2019-04-08 17:00:00 195 -1827 -9010.143 -527.46% profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = r1_tran_loss, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;PEA R1 (Central region) transmission\\n loss &amp; use (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(round(minv,-3), round(maxv,-2)*1.1,200), limits = c(round(minv,-2)*1.1, round(maxv, -2)*2)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_hline(yintercept = 0) + geom_text(data = summary, aes(x = peak_day, y = round(maxv, -2)*1.4), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), hjust = -0.1, vjust = 1) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)*0.8), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = 0, vjust = 1.9) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;r1_tran_loss_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;r1_tran_loss_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;r1_tran_loss_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_r1_tran_loss_2019&quot; = summary)) The 2019 PEA R1 transmission loss and use profile is illustrated in Figure 4.3. Figure 4.3: The PEA R1 transmission loss and use profile in 2019. 4.1.2 The 2019 PEA-R2 (North Eastern region) transmission loss and use profile profile &lt;- profiledata$`r2&amp;export_EDL_requirement_2019` %&gt;% mutate(r2_egt_sle = profiledata$`r2+dcr2_egtsle_2019`$r2_egt_sle, r2_tran_loss = r2_edl - r2_egt_sle) %&gt;% select(-r2_edl, -r2_egt_sle) # Summary data #### maxv &lt;- ceiling(max(profile$r2_tran_loss)) # Get a peak MW minv &lt;- floor(min(profile$r2_tran_loss)) # Get a min MW energy &lt;- sum(profile$r2_tran_loss)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(r2_tran_loss == max(r2_tran_loss)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(r2_tran_loss == min(r2_tran_loss)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 4.4: Summary of a PEA R2 transmission loss and use profile in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-08-27 15:00:00 2019-04-22 23:00:00 737 -394 1430.883 22.16% profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = r2_tran_loss, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;PEA R2 (North Eastern region) transmission\\n loss &amp; use (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(round(minv,-2), round(maxv,-2)*1.3,200), limits = c(round(minv,-2)*1.1, round(maxv, -2)*1.2)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_hline(yintercept = 0) + geom_text(data = summary, aes(x = peak_day, y = round(maxv, -2)*1.2), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), # hjust = 1, vjust = 0.5) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)*0.8), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), # hjust = 0, vjust = 8.5) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;r2_tran_loss_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;r2_tran_loss_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;r2_tran_loss_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_r2_tran_loss_2019&quot; = summary)) The 2019 PEA R2 transmission loss and use profile is illustrated in Figure 4.4. Figure 4.4: The PEA R2 transmission loss and use profile in 2019. 4.1.3 The 2019 PEA-R3 (Southern region) transmission loss and use profile profile &lt;- profiledata$`r3&amp;export_TNB_requirement_2019`%&gt;% mutate(r3_egt_sle = profiledata$`r3+dcr3_egtsle_2019`$r3_egt_sle, r3_tran_loss = r3_tnb - r3_egt_sle) %&gt;% select(-r3_tnb, -r3_egt_sle) # Summary data #### maxv &lt;- ceiling(max(profile$r3_tran_loss)) # Get a peak MW minv &lt;- floor(min(profile$r3_tran_loss)) # Get a min MW energy &lt;- sum(profile$r3_tran_loss)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(r3_tran_loss == max(r3_tran_loss)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(r3_tran_loss == min(r3_tran_loss)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 4.5: Summary of a PEA R3 transmission loss and use profile in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-10-05 13:08:00 2019-10-31 11:30:00 413 -112 510.5072 14.11% profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = r3_tran_loss, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;PEA R3 (Southern region) transmission\\n loss &amp; use (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(round(minv,-2), round(maxv,-2)*2,200), limits = c(round(minv,-2)*2, round(maxv, -2)*1.4)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_hline(yintercept = 0) + geom_text(data = summary, aes(x = peak_day, y = round(maxv, -2)*1.2), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), # hjust = 1, vjust = 0.5) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)*0.8), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), # hjust = 0, vjust = 5) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;r3_tran_loss_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;r3_tran_loss_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;r3_tran_loss_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_r3_tran_loss_2019&quot; = summary)) The 2019 PEA R3 transmission loss and use profile is illustrated in Figure 4.5. Figure 4.5: The PEA R3 transmission loss and use profile in 2019. 4.1.4 The 2019 PEA-R4 (Northern region) transmission loss and use profile profile &lt;- profiledata$r4_northern_requirement_2019%&gt;% mutate(r4_egt_sle = profiledata$`r4+dcr4_egtsle_2019`$r4_egt_sle, r4_tran_loss = NAC - r4_egt_sle) %&gt;% select(-NAC, -r4_egt_sle) # Summary data #### maxv &lt;- ceiling(max(profile$r4_tran_loss)) # Get a peak MW minv &lt;- floor(min(profile$r4_tran_loss)) # Get a min MW energy &lt;- sum(profile$r4_tran_loss)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(r4_tran_loss == max(r4_tran_loss)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(r4_tran_loss == min(r4_tran_loss)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 4.6: Summary of a PEA R4 transmission loss and use profile in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-10-04 12:30:00 2019-01-07 07:30:00 565 -417 754.6889 15.25% profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = r4_tran_loss, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;PEA R4 (Northern region) transmission\\n loss &amp; use (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(round(minv,-2), round(maxv,-2)*2,200), limits = c(round(minv,-2)*1.2, round(maxv, -2)*1.3)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ geom_hline(yintercept = 0) + geom_text(data = summary, aes(x = peak_day, y = round(maxv, -2)*1.2), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), # hjust = 1, vjust = 3) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)*0.8), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), # hjust = 0, vjust = 9) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;r4_tran_loss_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;r4_tran_loss_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;r4_tran_loss_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_r4_tran_loss_2019&quot; = summary)) The 2019 PEA R4 transmission loss and use profile is illustrated in Figure 4.6. Figure 4.6: The PEA R4 transmission loss and use profile in 2019. "],["total-net-generation-requirement-profile.html", "Chapter 5 Total net generation requirement profile 5.1 The 2019 MEA Total net generation requirement profile 5.2 The 2019 PEA R1 (Central region) total net generation requirement profile 5.3 The 2019 PEA R2 (North Eastern region) total net generation requirement profile 5.4 The 2019 PEA R3 (Southern region) total net generation requirement profile 5.5 The 2019 PEA R4 (Northern region) total net generation requirement profile 5.6 The 2019 Total net generation requirement profile", " Chapter 5 Total net generation requirement profile Total net electricity net generation requirement is calculated by the summation of an electricity requirement and VSPP in each region as given in equation (5.1). \\[\\begin{equation} TOTNETGEN_{i,t,h} = MEAReq_{t,h} + \\sum_{i=1}^{4}(PEAReq_{i,t,h} + VSPP_{i,t,h}) \\tag{5.1} \\end{equation}\\] Where, \\(TOT_NET_GEN_{i,t,h}\\) denotes total net electricity generation requirement in region \\(i\\) in year \\(t\\) at time stamp \\(h\\) (MW). \\(MEAReq_{t,h}\\) denotes the MEA requirement profile in year \\(t\\) at time stamp \\(h\\) (MW). \\(PEAReq_{i,t,h}\\) denotes the PEA requirement profile in region \\(i\\) in year \\(t\\) at time stamp \\(h\\) (MW). \\(VSPP_{i,t,h}\\) denotes the electricity generation from \\(VSPP\\) in region \\(i\\) in year \\(t\\) at time stamp \\(h\\) (MW). 5.1 The 2019 MEA Total net generation requirement profile profile &lt;- read_excel(&quot;raw_data/raw_data_profiles/02_Hourly Sale_NetGen_2019.xlsx&quot;, sheet = &quot;Load Curve&quot;, range = &quot;BK3:BQ17523&quot;) %&gt;% select(datetime = `Date/Time`, MAC) %&gt;% mutate(date = date(datetime), time = format(as.POSIXct(datetime),&quot;%H:%M:%S&quot;), year = year(datetime), month = month(datetime), day = day(datetime)) %&gt;% select(datetime, date, time, year, month, day, MAC) # Summary data #### maxv &lt;- ceiling(max(profile$MAC)) # Get a peak MW minv &lt;- floor(min(profile$MAC)) # Get a min MW energy &lt;- sum(profile$MAC)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(MAC == max(MAC)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(MAC == min(MAC)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 5.1: Summary of a MEA total net electricity generation profile in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-04-25 13:49:00 2019-01-01 07:00:00 11070 3215 64374.99 66.38% profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = MAC, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;MEA Total net generation requiremnet (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-2)*1.2,1000), limits = c(0, round(maxv, -2)*1.2)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ # geom_hline(yintercept = 0) + geom_text(data = summary, aes(x = peak_day, y = round(maxv, -2)*1.2), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), # hjust = 1, vjust = 3) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)*0.8), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = 0, vjust = 0) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;mea_total_netgen_req_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;mea_total_netgen_req_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;mea_total_netgen_req_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_mea_total_netgen_req_2019&quot; = summary)) The 2019 MEA total net electricity generation is illustrated in Figure 5.1. Figure 5.1: The MEA total net electricity generation requirement in 2019. 5.2 The 2019 PEA R1 (Central region) total net generation requirement profile profile &lt;- read_excel(&quot;raw_data/raw_data_profiles/02_Hourly Sale_NetGen_2019.xlsx&quot;, sheet = &quot;Load Curve&quot;, range = &quot;BK3:BQ17523&quot;) %&gt;% select(datetime = `Date/Time`, CAC) %&gt;% mutate(date = date(datetime), time = format(as.POSIXct(datetime),&quot;%H:%M:%S&quot;), year = year(datetime), month = month(datetime), day = day(datetime)) %&gt;% select(datetime, date, time, year, month, day, CAC) # Summary data #### maxv &lt;- ceiling(max(profile$CAC)) # Get a peak MW minv &lt;- floor(min(profile$CAC)) # Get a min MW energy &lt;- sum(profile$CAC)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(CAC == max(CAC)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(CAC == min(CAC)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 5.2: Summary of total net electricity generation profile in PEA R1 in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-05-08 22:30:00 2019-12-31 12:00:00 11400 3616 75379.76 75.48% profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = CAC, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;R1 (Central region) Total net generation requiremnet (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-2)*1.2,1000), limits = c(0, round(maxv, -2)*1.2)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ # geom_hline(yintercept = 0) + geom_text(data = summary, aes(x = peak_day, y = round(maxv, -2)*1.2), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), # hjust = 1, vjust = 1) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)*0.8), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = 1, vjust = 0) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;r1_total_netgen_req_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;r1_total_netgen_req_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;r1_total_netgen_req_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_r1_total_netgen_req_2019&quot; = summary)) The 2019 total net electricity generation in PEA R1 is illustrated in Figure 5.2. Figure 5.2: The PEA R1 total net electricity generation requirement in 2019. 5.3 The 2019 PEA R2 (North Eastern region) total net generation requirement profile profile &lt;- read_excel(&quot;raw_data/raw_data_profiles/02_Hourly Sale_NetGen_2019.xlsx&quot;, sheet = &quot;Load Curve&quot;, range = &quot;BK3:BQ17523&quot;) %&gt;% select(datetime = `Date/Time`, NEC) %&gt;% mutate(date = date(datetime), time = format(as.POSIXct(datetime),&quot;%H:%M:%S&quot;), year = year(datetime), month = month(datetime), day = day(datetime)) %&gt;% select(datetime, date, time, year, month, day, NEC) # Summary data #### maxv &lt;- ceiling(max(profile$NEC)) # Get a peak MW minv &lt;- floor(min(profile$NEC)) # Get a min MW energy &lt;- sum(profile$NEC)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(NEC == max(NEC)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(NEC == min(NEC)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 5.3: Summary of total net electricity generation profile in PEA R2 in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-05-20 20:40:00 2019-01-01 23:30:00 4427 1234 23629.02 60.93% profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = NEC, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;R2 (North Eastern region) Total net generation requiremnet (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-2)*1.2,1000), limits = c(0, round(maxv, -2)*1.2)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ # geom_hline(yintercept = 0) + geom_text(data = summary, aes(x = peak_day, y = round(maxv, -2)*1.2), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), # hjust = 1, vjust = 1) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)*0.8), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = -0.05, vjust = -1) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;r2_total_netgen_req_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;r2_total_netgen_req_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;r2_total_netgen_req_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_r2_total_netgen_req_2019&quot; = summary)) The 2019 total net electricity generation in PEA R2 is illustrated in Figure 5.3. Figure 5.3: The PEA R2 total net electricity generation requirement in 2019. 5.4 The 2019 PEA R3 (Southern region) total net generation requirement profile profile &lt;- read_excel(&quot;raw_data/raw_data_profiles/02_Hourly Sale_NetGen_2019.xlsx&quot;, sheet = &quot;Load Curve&quot;, range = &quot;BK3:BQ17523&quot;) %&gt;% select(datetime = `Date/Time`, SAC) %&gt;% mutate(date = date(datetime), time = format(as.POSIXct(datetime),&quot;%H:%M:%S&quot;), year = year(datetime), month = month(datetime), day = day(datetime)) %&gt;% select(datetime, date, time, year, month, day, SAC) # Summary data #### maxv &lt;- ceiling(max(profile$SAC)) # Get a peak MW minv &lt;- floor(min(profile$SAC)) # Get a min MW energy &lt;- sum(profile$SAC)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(SAC == max(SAC)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(SAC == min(SAC)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 5.4: Summary of total net electricity generation profile in PEA R3 in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-04-21 20:39:00 2019-01-05 04:00:00 2932 1462 18537.62 72.17% profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = SAC, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;R3 (Southern region) Total net generation requiremnet (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-2)*1.2,500), limits = c(0, round(maxv, -2)*1.2)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ # geom_hline(yintercept = 0) + geom_text(data = summary, aes(x = peak_day, y = round(maxv, -2)*1.2), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), # hjust = 1, vjust = 1) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)*0.8), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = -0.05, vjust = -1) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;r3_total_netgen_req_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;r3_total_netgen_req_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;r3_total_netgen_req_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_r3_total_netgen_req_2019&quot; = summary)) The 2019 total net electricity generation in PEA R3 is illustrated in Figure 5.4. Figure 5.4: The PEA R3 total net electricity generation requirement in 2019. 5.5 The 2019 PEA R4 (Northern region) total net generation requirement profile profile &lt;- read_excel(&quot;raw_data/raw_data_profiles/02_Hourly Sale_NetGen_2019.xlsx&quot;, sheet = &quot;Load Curve&quot;, range = &quot;BK3:BQ17523&quot;) %&gt;% select(datetime = `Date/Time`, NAC) %&gt;% mutate(date = date(datetime), time = format(as.POSIXct(datetime),&quot;%H:%M:%S&quot;), year = year(datetime), month = month(datetime), day = day(datetime)) %&gt;% select(datetime, date, time, year, month, day, NAC) # Summary data #### maxv &lt;- ceiling(max(profile$NAC)) # Get a peak MW minv &lt;- floor(min(profile$NAC)) # Get a min MW energy &lt;- sum(profile$NAC)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(NAC == max(NAC)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(NAC == min(NAC)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 5.5: Summary of total net electricity generation profile in PEA R4 in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-05-20 21:01:00 2019-12-09 04:00:00 3575 1053 18164.57 58.00% profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = NAC, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;R4 (Northern region) Total net generation requiremnet (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-2)*1.2,500), limits = c(0, round(maxv, -2)*1.2)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ # geom_hline(yintercept = 0) + geom_text(data = summary, aes(x = peak_day, y = round(maxv, -2)*1.2), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), # hjust = 1, vjust = 1) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)*0.8), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = 1, vjust = -1) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;r4_total_netgen_req_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;r4_total_netgen_req_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;r4_total_netgen_req_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_r4_total_netgen_req_2019&quot; = summary)) The 2019 total net electricity generation in PEA R4 is illustrated in Figure 5.5. Figure 5.5: The PEA R4 total net electricity generation requirement in 2019. 5.6 The 2019 Total net generation requirement profile Total net electricity generation is calculated by the summation of total net electricity generation in MEA and PEA regions as given in equation (5.1). profile &lt;- profiledata$mea_total_netgen_req_2019 %&gt;% mutate(cac_tot_netgen = profiledata$r1_total_netgen_req_2019$CAC, nec_tot_netgen = profiledata$r2_total_netgen_req_2019$NEC, sac_tot_netgen = profiledata$r3_total_netgen_req_2019$SAC, nac_tot_netgen = profiledata$r4_total_netgen_req_2019$NAC, tot_netgen_req = MAC + cac_tot_netgen + nec_tot_netgen + sac_tot_netgen + nac_tot_netgen) %&gt;% select(-MAC, -cac_tot_netgen, -nec_tot_netgen, -sac_tot_netgen, -nac_tot_netgen) # Summary data #### maxv &lt;- ceiling(max(profile$tot_netgen_req)) # Get a peak MW minv &lt;- floor(min(profile$tot_netgen_req)) # Get a min MW energy &lt;- sum(profile$tot_netgen_req)/2000 # Calculate the energy peak_day &lt;- profile %&gt;% #Find a peak day group_by(year) %&gt;% filter(tot_netgen_req == max(tot_netgen_req)) %&gt;% pull(datetime) min_day &lt;- profile %&gt;% #Find a min day group_by(year) %&gt;% filter(tot_netgen_req == min(tot_netgen_req)) %&gt;% last() %&gt;% pull(datetime) load_factor &lt;- percent((energy*10^3)/(maxv*8760), accuracy = 0.01, decimal.mark = &quot;.&quot;) summary &lt;- tibble(peak_day = peak_day, min_day = min_day, peak_mw = maxv, min_mw = minv, energy_gwh = energy, load_factor = load_factor) # combine all data in 1 table Table 5.6: Summary of total net electricity generation profile in 2019 peak_day min_day peak_mw min_mw energy_gwh load_factor 2019-05-03 14:27:00 2019-01-02 04:00:00 32273 11467 200086 70.77% profile_plot &lt;- ggplot() + geom_line(data=profile, aes(x = datetime, y = tot_netgen_req, group = month, color = as.factor(month)), show.legend = FALSE) + ThemeLine + labs(x = NULL, y = &quot;Total net generation requiremnet (MW)&quot;)+ scale_x_datetime(breaks=date_breaks(&quot;1 month&quot;), labels=date_format(&quot;%b %y&quot;)) + scale_y_continuous(breaks = seq(0, round(maxv,-2)*1.2,2000), limits = c(0, round(maxv, -2)*1.2)) + scale_color_manual(values = linepalette1) + geom_point(data=summary, aes(x = peak_day, y = peak_mw))+ # geom_hline(yintercept = 0) + geom_text(data = summary, aes(x = peak_day, y = round(maxv, -2)*1.2), label = glue(&quot;Peak {maxv} MW \\n@ {peak_day}&quot;), # hjust = 1, vjust = 1) + geom_point(data=summary, aes(x = min_day, y = min_mw))+ geom_text(data = summary, aes(x = min_day, y = round(minv, -3)*0.8), label = glue(&quot;Minimum {minv} MW \\n@ {min_day}&quot;), hjust = 0, vjust = 1) # Save the output #### outputfigure &lt;- paste0(outfigdir, &quot;total_netgen_req_2019.png&quot;) ggsave(profile_plot, file = outputfigure, dpi = 150, width = 15, height = 5, units = &quot;in&quot;, limitsize = FALSE) profiledata &lt;- c(profiledata, list(&quot;total_netgen_req_2019&quot; = profile)) profilefigure &lt;- c(profilefigure, list(&quot;total_netgen_req_2019&quot; = profile_plot)) summarydata &lt;- c(summarydata, list(&quot;sum_total_netgen_req_2019&quot; = summary)) The 2019 total net electricity generation is illustrated in Figure 5.6. Figure 5.6: Total net electricity generation requirement in 2019. "],["very-small-power-producer-vspp-situation.html", "Chapter 6 Very small power producer (VSPP) situation 6.1 Electricity generation from VSPP in the MEA 6.2 Electricity generation from VSPP in the PEA 6.3 Electricity generation from DEDE in the PEA 6.4 Self electricity generation in the PEA 6.5 Total electricity generation from VSPP", " Chapter 6 Very small power producer (VSPP) situation 6.1 Electricity generation from VSPP in the MEA In MEA, the electricity are produced by: Solar Municipal solid waste (MSW) Small hydro Co-generation According to MEA data, the electricity generation is available from 1997-2021 (budget load as of 20 Oct 2022). mea_vspp_ene_ext &lt;- read_excel(&quot;raw_data/01 EGAT_20Oct2022_งบ66 67_Final.xlsx&quot;, sheet = &quot;I_Actual&quot;, range = &quot;CE7:CM31&quot;, col_names = c(&quot;solar&quot;, &quot;wind&quot;, &quot;biomass&quot;, &quot;biogas&quot;, &quot;msw&quot;, &quot;hydro&quot;, &quot;enecrop&quot;, &quot;cogen&quot;, &quot;tot_vspp_gwh&quot;)) %&gt;% replace(is.na(.),0) %&gt;% mutate(year = 1997:2021, year_th = year + 543) %&gt;% select(year, year_th,everything()) %&gt;% pivot_longer(-year&amp;-year_th, names_to = &quot;fuel&quot;, values_to = &quot;mea_vspp_gwh&quot;) Electricity generation from VSPP in the MEA region is provided by the Load Forecast committee. The data is available from 2005. There is no electricity generation from biogas, biomass, energy crop, and wind in MEA region. Total electricity generation from VSPP substantially increased from 3 MWh in 2005 to 316 GWh in 2021. Municipal solid waste (MSW) and solar played vital roles in generating an electricity (see Figure 6.1). Figure 6.1: Electricity generation from VSPP in MEA region during 2005–2021. 6.2 Electricity generation from VSPP in the PEA In PEA, the electricity are produced by: Solar Solar rooftop Wind Biomass Biogas Municipal solid waste (MSW) Small hydro Co-generation A R code chunk to analyze the electricity generation from VSPP in the PEA is given below. pea_vspp_ene_ext &lt;- read_excel(&quot;raw_data/01 EGAT_20Oct2022_งบ66 67_Final.xlsx&quot;, sheet = &quot;I_Actual&quot;, range = &quot;DK7:DT31&quot;, col_names = c(&quot;solar&quot;,&quot;pvrftop&quot;, &quot;wind&quot;, &quot;biomass&quot;, &quot;biogas&quot;, &quot;msw&quot;, &quot;hydro&quot;, &quot;enecrop&quot;, &quot;cogen&quot;, &quot;tot_vspp_gwh&quot;))%&gt;% replace(is.na(.),0) %&gt;% mutate(year = 1997:2021, year_th = year + 543, slr_and_rftop = solar + pvrftop) %&gt;% select(year, year_th,slr_and_rftop,everything(), -solar,-pvrftop) %&gt;% pivot_longer(-year&amp;-year_th, names_to = &quot;fuel&quot;, values_to = &quot;pea_vspp_gwh&quot;) Total electricity generation from VSPP substantially increased from 14 GWh in 2005 to 1.1324^{4} GWh in 2021. Biomass played a vital role in generating an electricity in PEA during 2005-2021. Solar and solar rooftop was exponentially increased from 2010-2017 and saturated from 2018 onwards (see Figure 6.2: Solar &amp; solar rooftop). Wind electricity ramped up from 1 GWh in 2008 to 79 GWh in 2021 (see Figure 6.2: Wind). Figure 6.2: Electricity generation from VSPP in PEA region during 2005–2021. 6.3 Electricity generation from DEDE in the PEA A R code chunk to analyze the electricity generation from DEDE in the PEA is given below. Electricity generation from DEDE is provided small hydro power plants. Total electricity generation from DEDE substantially increased from 83 GWh in 2005 and reach its peak 109 GWh in 2017. The generation sharply fell to 71 GWh in 2021 (see Figure 6.3). Figure 6.3: Electricity generation from DEDE in PEA region during 2005–2021. 6.4 Self electricity generation in the PEA A R code chunk to analyze the self electricity generation in the PEA is given below. pea_sfgen_ene &lt;- read_excel(&quot;raw_data/01 EGAT_20Oct2022_งบ66 67_Final.xlsx&quot;, sheet = &quot;I_Actual&quot;, range = &quot;EZ7:EZ31&quot;, col_names = &quot;pea_sfgen_gwh&quot;) %&gt;% mutate(year = 1997:2021, year_th = year +543) Self electricity generation in the PEA is contributed by small hydro, solar, wind, and diesel generators. Total electricity generation from DEDE substantially increased from 44 GWh in 2005 and reach its peak 126 GWh in 2018. The generation fell to 92 GWh in 2021 (see Figure 6.4). Figure 6.4: Self electricity generation in PEA region during 2005–2021. 6.5 Total electricity generation from VSPP Total electricity generation can be calculated by equation (6.1). \\[\\begin{equation} EVSPP_{i,t} = EVSPP_{MEA,t} + (EVSPP_{PEA,t}+EVSPP_{DEDE,t}+EVSPP_{Selfgen,t}) \\tag{6.1} \\end{equation}\\] Where, \\(EVSPP_{i,t}\\) denotes total electricity generation by VSPP from region \\(i\\) in year \\(t\\). \\(EVSPP_{MEA,t}\\) denotes total electricity generation by VSPP from \\(MEA\\) in year \\(t\\) (see section 6.1). \\(EVSPP_{PEA,t}\\) denotes an electricity generation by VSPP from \\(PEA\\) in year \\(t\\) (see section 6.2). \\(EVSPP_{DEDE,t}\\) denotes an electricity generation by \\(DEDE\\) from PEA in year \\(t\\) (see section 6.3). \\(EVSPP_{Selfgen,t}\\) denotes a self electricity generation (\\(Selfgen\\)) from PEA in year \\(t\\) (see section 6.4). A R code chunk to analyze total electricity generation is given below. tot_vspp_ext &lt;- cbind(mea_vspp_ene_ext %&gt;% filter(year &gt;= 2015, fuel == &quot;tot_vspp_gwh&quot;) %&gt;% select(year, year_th, mea_vspp_gwh), pea_vspp_ene_ext %&gt;% filter(year &gt;= 2015, fuel == &quot;tot_vspp_gwh&quot;) %&gt;% select(pea_vspp_gwh), pea_dede_ene %&gt;% filter(year &gt;= 2015) %&gt;% select(pea_dede_gwh), pea_sfgen_ene %&gt;% filter(year &gt;= 2015) %&gt;% select(pea_sfgen_gwh) ) %&gt;% mutate(tot_pea_vspp_gwh = pea_vspp_gwh + pea_dede_gwh + pea_sfgen_gwh, tot_vspp_ext_gwh = mea_vspp_gwh + pea_vspp_gwh + pea_dede_gwh + pea_sfgen_gwh) %&gt;% pivot_longer(-year&amp;-year_th,names_to = &quot;vspp&quot;,values_to = &quot;ene_vspp_ext_gwh&quot;) Figure 6.5 illustrates total electricity generation from VSPP during 2015-2021. Total electricity generation from VSPP sharply increased from 6054 GWh in 2015 to 1.1803^{4} GWh in 2021. The PEA mainly drove the generation by VSPP. Figure 6.5: Electricity generation from VSPP during 2015–2021. "],["vspps-calculation.html", "Chapter 7 VSPPs calculation 7.1 VSPPs in the PDP2018 revision 1 (PDP2018 Rev.1) 7.2 VSPP in the PDP2022 Case 7 7.3 VSPPs electricity generation 7.4 VSPP explanation", " Chapter 7 VSPPs calculation Estimated electricity generation (energy) can be found in equation (6.1). In this project, VSPP contract capacity and electricity generation are considered. An information is taken from PDP2018 Rev.1 and PDP2022 Case 7. VSPP contract capacity and electricity generation are summarized by Power Development Planning Section (แผนกวางแผนพัฒนากำลังผลิตไฟฟ้า (หผฟ-ย.)), Generation System Development Planning Department (กองวางแผนพัฒนากำลังผลิตไฟฟ้า (กผฟ-ย.)), Generation and Transmission System Planning Division (ฝ่ายวางแผนระบบไฟฟ้า (อผฟ.)). 7.1 VSPPs in the PDP2018 revision 1 (PDP2018 Rev.1) 7.1.1 Contract capacity The summary of VSPP contract capacity and electricity generation is given by Power Development Planning Section. The R code chunk is given below. vsppcontractcapPDP2018R1 &lt;- read_excel(&quot;raw_data/Domeสรุป VSPP_PDP18R1 and ร่าง PDP2022 เคส 7_เพิ่ม vspp.xlsx&quot;, sheet = &quot;สรุป VSPP PDP18R1 Fuel&quot;, range = &quot;A1:U13&quot;)%&gt;% rename(vspp_mw = &quot;VSPP (MW)&quot;) %&gt;% pivot_longer(-vspp_mw, names_to = &quot;year_th&quot;,values_to = &quot;contract_mw&quot;) %&gt;% mutate(year = as.numeric(year_th)-543) %&gt;% pivot_wider(names_from = vspp_mw, values_from = contract_mw) %&gt;% rename_all(tolower) %&gt;% rename(&quot;hydro (small)&quot; = hydro, msw = &quot;waste&quot;, iew = &quot;industrial waste&quot;, total = &quot;รวม&quot;) %&gt;% pivot_longer(-year_th&amp;-year, names_to = &quot;fuel&quot;,values_to = &quot;contract_mw&quot;) Coal and diesel contract capacities are constant throughout PDP2018 rev.1 at 31.99 MW and 29.98 MW, respectively. Contract capacity from gas increases from 24.7 MW in 2018 to 31.5 MW in 2019 and remains constant till 2037. Biogas and biomass substantially increase from 2018-2037. In 2037, biogas, biomass, solar and wind contract capacity reach 1,535.48 MW and 3,887.27 MW, 11,574.56 MW, and 1,541.37 MW, respectively. Industrial waste starts from 5.91 MW in 2034 to 44 MW in 2037. Waste contract capacity reaches 601 MW from 2022 till 2037. Hydro power plant remains the same at 27.03 MW from 2018-2037. Energy efficiency plan (EE) increases 354 MW in 2032 and reaches 4,000 MW in 2037. Total contract capacity increases from 3,787.48 MW in 2018 to 23,304.21 MW in 2037. Figure 7.1: VSPP contract capacity in the PDP2018 Rev.1 7.1.2 Electricity generation Electricity generation from VSPP in the PDP2018 Rev.1 code chunk is provided below. vsppenergyPDP2018R1 &lt;- read_excel(&quot;raw_data/Domeสรุป VSPP_PDP18R1 and ร่าง PDP2022 เคส 7_เพิ่ม vspp.xlsx&quot;, sheet = &quot;สรุป VSPP PDP18R1 Fuel&quot;, range = &quot;A16:U28&quot;)%&gt;% rename(vspp_gwh = &quot;VSPP (Energy)&quot;) %&gt;% pivot_longer(-vspp_gwh, names_to = &quot;year_th&quot;,values_to = &quot;energy_gwh&quot;) %&gt;% mutate(year = as.numeric(year_th)-543) %&gt;% pivot_wider(names_from = vspp_gwh, values_from = energy_gwh) %&gt;% rename_all(tolower) %&gt;% rename(&quot;hydro (small)&quot; = hydro, msw = &quot;waste&quot;, iew = &quot;industrial waste&quot;, total = &quot;รวม&quot;) %&gt;% pivot_longer(-year_th&amp;-year, names_to = &quot;fuel&quot;,values_to = &quot;vspp_gwh&quot;) Total electricity generation from VSPP increases from 9,070.21 GWh in 2018 to 75,577.09 GWh in 2037. Electricity generation from coal, diesel and gas are at 69 GWh, 50 GWh and 70 GWh in 2037. Biogas and biomass significantly surge an electricity generation to 7,994.75 GWh and 23,226.09 GWh in 2037, respectively. Industrial waste provides an electricity to the system since 2034. The generation reaches 269.81 GWh in 2037. Waste power plant reaches its peak generation at 2,316.48 GWh since 2022. Electricity generation from small hydro power plant remains constant at 78.99 GWh. Solar and wind electricity significantly rise to 17,650.47 GWh and 3,353.10 GWh in 2037, respectively. Additional energy efficiency plan increases to 20,498.40 GWh in 2037. Figure 7.2: VSPP electricity generation in the PDP2018 Rev.1 7.2 VSPP in the PDP2022 Case 7 7.2.1 Contract capacity The summary of VSPP contract capacity is given by Power Development Planning Section. The R code chunk is given below. vsppcontractcapPDP2022C7&lt;- read_excel(&quot;raw_data/Domeสรุป VSPP_PDP18R1 and ร่าง PDP2022 เคส 7_เพิ่ม vspp.xlsx&quot;, sheet = &quot;สรุป VSPP PDP2022 Fuel&quot;, range = &quot;A1:Q23&quot;)%&gt;% rename(vspp_mw = &quot;VSPP-Contract Capacity&quot;) %&gt;% pivot_longer(-vspp_mw, names_to = &quot;year&quot;,values_to = &quot;contract_mw&quot;) %&gt;% mutate(year_th = as.numeric(year)+543) %&gt;% pivot_wider(names_from = vspp_mw, values_from = contract_mw) %&gt;% rename_all(tolower) %&gt;% pivot_longer(-year_th&amp;-year, names_to = &quot;fuel&quot;,values_to = &quot;vspp_mw&quot;) #%&gt;% # ggplot(aes(x = as.factor(year), y = vspp_mw, group = fuel, color = fuel)) + # geom_line() Total contract capacity increases from 4,329.68 MW in 2022 to 15,393.37 MW in 2037. Coal, diesel, gas and waste heat contract capacity remain the same in the PDP2022 case 7. The contract capacity are 43.79 MW, 28.44 MW, 24.70 MW and 4.5 MW. Biogas and biomass rapidly increase from 2025 and reach 1,481.97 MW and 2,252.58 MW in 2037, respectively. Solar contract capacity rises to 10,150 MW. Floating solar starts to play its role since 2025. The capacity is 63.43 MW in 2037. Wind capacity remains constant at 58.39 MW during 2024-2037. Small hydro power plant contract capacity continuously rises from 58.59 MW in 2022 to 126.22 MW in 2037. Geothermal capacity is 21 MW in 2037. MSW contract capacity escalates in 3 periods. It starts from 179.56 MW in 2022. The capacity increases to 595.56 MW during 2026-2030, 795 MW from 2031-2034, 895.56 MW from 2035 onwards. Industrial waste capacity remains 30.78 MW from 2022-2025. The capacity reaches 242.78 MW in 2037. Figure 7.3: VSPP contract capacity in the PDP2022 case 7 7.2.2 Electricity generation The summary of VSPP electricity generation is given by Power Development Planning Section. The R code chunk is given below. vsppenergyPDP2022C7 &lt;- read_excel(&quot;raw_data/Domeสรุป VSPP_PDP18R1 and ร่าง PDP2022 เคส 7_เพิ่ม vspp.xlsx&quot;, sheet = &quot;สรุป VSPP PDP2022 Fuel&quot;, range = &quot;A25:Q47&quot;)%&gt;% rename(vspp_gwh = &quot;VSPP-Generation&quot;) %&gt;% pivot_longer(-vspp_gwh, names_to = &quot;year&quot;,values_to = &quot;energy_gwh&quot;) %&gt;% mutate(year_th = as.numeric(year)+543) %&gt;% pivot_wider(names_from = vspp_gwh, values_from = energy_gwh) %&gt;% rename_all(tolower) %&gt;% pivot_longer(-year_th&amp;-year, names_to = &quot;fuel&quot;,values_to = &quot;vspp_gwh&quot;) Total electricity generation increases from 11,882.25 GWh in 2022 to 42,213.86 GWh in 2037. Electricity generation from solar, biomass and biogas are the top 3 contributors. In 2037, electricity generation from those 3 contributors are 16,128.4 GWh, 12,577.94 GWh and 7,771.70 GWh. Floating solar and wind electricity generate 100 GWh and 84.16 GWh, respectively. MSW electricity generates 3,698 GWh. Coal, diesel, gas generate 138.44 GWh. Figure 7.4: VSPP electricity generation in the PDP2022 case 7 7.3 VSPPs electricity generation 7.3.1 The PDP2018 Rev.1 Total electricity generation from existing VSPPs is selected from 2019 onwards (see section 6.5 and figure 6.5). The R code chunk is given below. merge_vspp_ext &lt;- tot_vspp_ext %&gt;% filter(vspp == &quot;tot_vspp_ext_gwh&quot;, year &gt;= 2019) %&gt;% select(!vspp) Total electricity generation from VSPPs in PDP2018 Rev.1 is selected from 2022 onwards (see section 7.1.2 and figure 7.2). The R code chunk is given below. merge_vspp_pdp2018r1 &lt;- vsppenergyPDP2018R1 %&gt;% filter(fuel ==&quot;total&quot;, year &gt;= 2022) %&gt;% select(!fuel) The R code chunk below combines 2 data frames above. The full_join function is used. The function belongs to dplyr package which is a subset of tidyverse package (see section 2.1.2). Figure 7.5 illustrates total electricity generation from VSPPs in the PDP2018 Rev.1. merge_vspp_ext_pdp &lt;- full_join(merge_vspp_ext, merge_vspp_pdp2018r1, by = c(&quot;ene_vspp_ext_gwh&quot; = &quot;vspp_gwh&quot;)) Total electricity generation from VSPPs increases from 11,665 GWh in 2019 to 75,577 GWh in 2037 (see Figure 7.5. The electricity generation increases 11% annually from 2019-2037. Solar, biomass and biogas are the top 3 electricity generation (see Figure 7.4). Figure 7.5: Total electricity generation from VSPPs in PDP2018 Rev.1 7.3.2 The PDP2022 case 7 Total electricity generation from VSPPs in PDP2022 case 7 is selected from 2022 onwards (see section 7.2.2 and figure 7.4). The R code chunk is given below. merge_vspp_pdp2023c7 &lt;- vsppenergyPDP2022C7 %&gt;% filter(fuel ==&quot;total&quot;, year &gt;= 2022) %&gt;% select(!fuel) Again, the full_join function is used. The function belongs to dplyr package which is a subset of tidyverse package (see section 2.1.2). Figure 7.6 illustrates total electricity generation from VSPPs in the PDP2022 case 7. merge_vspp_ext_pdp2023c7 &lt;- full_join(merge_vspp_ext, merge_vspp_pdp2023c7, by = c(&quot;ene_vspp_ext_gwh&quot; = &quot;vspp_gwh&quot;)) Total electricity generation from VSPPs increases from 11,665 GWh in 2019 to 42,214 GWh in 2037 (see Figure 7.6. Figure 7.9 illustrates the comparison of an electricity generation from VSPP in the PDP2018 Rev. 1 and the PDP2022 case 7. Electricity generation increases by 33,364 GWh or almost 80% of electricity generation in PDP2022 case 7 than those in PDP2018 Rev.1. Figure 7.6: Total electricity generation from VSPPs in PDP2022 case 7 7.4 VSPP explanation The VSPP contract capacity assumption obtained from Department of Alternative Energy Development and Efficiency (DEDE) on 31 January 2023. This data is used for (draft) AEDP2022. Files are used as follows: Additional renewable power plant is obtained from file Z:\\3PDP\\PDP2022\\Workshop\\202301_AEDP 31 ม.ค. 2566\\สถานะปัจจุบัน_รายภาค_รายปี.xlsx Plexos results in case 7 Z:\\3PDP\\PDP2022\\Workshop\\202301_AEDP 31 ม.ค. 2566\\Case 7 AEDP310166, 67.7MT CO2, wind1500\\Detail_Generation_data_PDP2022_AEDP3101_wind(1500)_addSolar360.xlsx Total VSPPs contract capacity in the PDP2018 Rev.1 is higher than those in the PDP2022 case 7 by 33.9% in 2037 (see Figure 7.7). Electricity generation from VSPPs shows a similar trend (see Figure 7.9). Figure 7.7: VSPPs contract capacity Figure 7.8 illustrates VSPPs contract capacity by fuel type. Solar and biomass play important role in generating an electricity from VSPPs. Diesel, gas and wind is not an interested source of electricity in the PDP2022 case 7 compared to the PDP2018 Rev.1. Electricity generation from coal, small hydro power, industrial waste, MSW and waste heat increases in the PDP2022 case 7. Floating solar is a new electricity generation option. MSW contract capacity continues to rise. Electricity generation mix shows a similar trend (see Figure 7.10). Figure 7.8: VSPPs contract capacity mix Figure 7.9: Electricity generation from VSPPs Figure 7.10: Electricity generation mix from VSPPs "],["egat-internal-electricity-use-and-pump-and-storage.html", "Chapter 8 EGAT internal electricity use and pump and storage 8.1 Electricity use in office and others 8.2 Electricity use in EGAT substations and their office 8.3 Electricity use in station service (off-load) 8.4 Electricity use in Mae Moh 8.5 Electricity use in pump and storage 8.6 Total electricity consumption", " Chapter 8 EGAT internal electricity use and pump and storage EGAT internal electricity use is categorized into 2 groups as follows: EGAT head office and others EGAT substations and their offices EGAT station services (other processes in force outage power plants) Mae Moh mining EGAT pump and storage system The EGAT electricity consumption data is obtained from Power System Control and Operation Division (ฝ่ายควบคุมระบบกำลังไฟฟ้า (อคฟ.)), Power Generation and Purchase Data Processing Department (กองประมวลผลข้อมูลการผลิตและซื้อขายไฟฟ้า (กผฟ-ส.)) website. 8.1 Electricity use in office and others Electricity consumption is taken from Head of National Load forecast section. The file name is 01 EGAT_20Oct2022_งบ66 67_Final.xlsx. The R code chunk is given below. use_office &lt;- read_excel(&quot;raw_data/01 EGAT_20Oct2022_งบ66 67_Final.xlsx&quot;, sheet = &quot;C_LossUse&quot;, range = &quot;C18:D45&quot;, col_names = c(&quot;year_th&quot;, &quot;ely_gwh&quot;)) %&gt;% mutate(year = year_th - 543) Electricity use in office and others reached its peak 37 GWh in 2019. In 2023, it assumed that the electricity consumption will be similar to 2018 at 35 GWh according to EGAT staff returned to work onsite (see Figure 8.1). Figure 8.1: Electricity consumption in EGAT head office and others 8.2 Electricity use in EGAT substations and their office The data is extracted from 01 EGAT_20Oct2022_งบ66 67_Final.xlsx. The R code chuck is given below. use_egatsub &lt;- read_excel(&quot;raw_data/01 EGAT_20Oct2022_งบ66 67_Final.xlsx&quot;, sheet = &quot;C_LossUse&quot;, range = &quot;C59:D86&quot;, col_names = c(&quot;year_th&quot;, &quot;ely_gwh&quot;)) %&gt;% mutate(year = year_th - 543) Electricity consumption in EGAT substations decreased from 84 GWh in 2010 to 64 GWh in 2015. It is assumed that the electricity consumtion will be similar to those in 2019 (see Figure 8.2). Figure 8.2: Electricity consumption in EGAT substations 8.3 Electricity use in station service (off-load) The data is extracted from 01 EGAT_20Oct2022_งบ66 67_Final.xlsx. The R code chuck is given below. use_statserv &lt;- read_excel(&quot;raw_data/01 EGAT_20Oct2022_งบ66 67_Final.xlsx&quot;, sheet = &quot;C_LossUse&quot;, range = &quot;C100:D127&quot;, col_names = c(&quot;year_th&quot;, &quot;ely_gwh&quot;)) %&gt;% mutate(year = year_th - 543) Electricity consumption in station services (off-load) reached its peak 103 GWh in 2022. It is assumed that the consumption in2023 would be similar to those in 2019 (see Figure 8.3). Figure 8.3: Electricity consumption in station service (off-load) 8.4 Electricity use in Mae Moh The data is extracted from 01 EGAT_20Oct2022_งบ66 67_Final.xlsx. The R code chuck is given below. use_maemoh &lt;- read_excel(&quot;raw_data/01 EGAT_20Oct2022_งบ66 67_Final.xlsx&quot;, sheet = &quot;C_LossUse&quot;, range = &quot;C149:D176&quot;, col_names = c(&quot;year_th&quot;, &quot;ely_gwh&quot;)) %&gt;% mutate(year = year_th - 543) 8.5 Electricity use in pump and storage The data is extracted from 01 EGAT_20Oct2022_งบ66 67_Final.xlsx. The R code chuck is given below. use_pump &lt;- read_excel(&quot;raw_data/01 EGAT_20Oct2022_งบ66 67_Final.xlsx&quot;, sheet = &quot;C_LossUse&quot;, range = &quot;C190:D217&quot;, col_names = c(&quot;year_th&quot;, &quot;ely_gwh&quot;)) %&gt;% mutate(year = year_th - 543) 8.6 Total electricity consumption total_usepump &lt;- use_office %&gt;% mutate(use_egatsub = use_egatsub$ely_gwh, use_statserv = use_statserv$ely_gwh, use_maemoh = use_maemoh$ely_gwh, use_pump = use_pump$ely_gwh, total_usepump = ely_gwh + use_egatsub + use_statserv + use_maemoh + use_pump) "],["list-of-equations.html", "List of equations", " List of equations Calculated energy (electricity) from sale profiles (3.1) \\[\\begin{equation} Ene_{t}=\\frac{\\sum_{h=1}^{17520} (Prf_{t,h})}{2*1000} \\tag{3.1} \\end{equation}\\] Load factor (3.2) \\[\\begin{equation} LF_{t}=\\frac{Energy_{t}}{Peak_{d,h} * 8760}*100 \\tag{3.2} \\end{equation}\\] Electricity profile in PEA region (3.3) \\[\\begin{equation} Prf_{r,t,h}=\\ Prf_{PEA,t,h} + Prf_{DC,t,h} \\tag{3.3} \\end{equation}\\] Electricity EGAT sale profile (3.4) \\[\\begin{equation} EGTSLE_{t,h}=\\ MEA_{t,h} + \\sum_{i=1}^{4} (PEA_{i,t,h} + DC_{i,t,h}) \\tag{3.4} \\end{equation}\\] EGAT net electricity generation profile (3.5) \\[\\begin{equation} EGTNETGEN_{i,t,h} = MEAReq_{t,h} + \\sum_{i=1}^{4} PEAReq_{i,t,h} + \\sum_{c=1}^{2}EXPReq_{c,t,h} \\tag{3.5} \\end{equation}\\] Transmissions loss profile (4.1) \\[\\begin{equation} LSS_{i,t,h} = EGTNETGEN_{i,t,h} - EGTSLE_{i,t,h} \\tag{4.1} \\end{equation}\\] Total net generation requirement profile (5.1) \\[\\begin{equation} TOTNETGEN_{i,t,h} = MEAReq_{t,h} + \\sum_{i=1}^{4}(PEAReq_{i,t,h} + VSPP_{i,t,h}) \\tag{5.1} \\end{equation}\\] Total electricity generation from VSPP (6.1) \\[\\begin{equation} EVSPP_{i,t} = EVSPP_{MEA,t} + (EVSPP_{PEA,t}+EVSPP_{DEDE,t}+EVSPP_{Selfgen,t}) \\tag{6.1} \\end{equation}\\] "],["list-of-figures.html", "List of figures", " List of figures Figure name Figure number Energy consumption for electricity generation from 2017–2021 1.1 EGAT electricity sale profile to MEA in 2019 3.1 EGAT electricity sale profile to PEA-R1 in 2019 3.2 EGAT electricity sale profile to PEA-R2 in 2019 3.3 EGAT electricity sale profile to PEA-R3 in 2019 3.4 EGAT electricity sale profile to PEA-R4 in 2019 3.5 EGAT electricity sale profile to PEA (all regions) in 2019 3.6 EGAT electricity sale profile to direct customer in PEA-R1 in 2019 3.7 EGAT electricity sale profile to direct customer in PEA-R2 in 2019 3.8 EGAT electricity sale profile to direct customer in PEA-R3 in 2019 3.9 EGAT electricity sale profile to direct customer in PEA-R4 in 2019 3.10 EGAT electricity sale profile to direct customer in PEA (all regions) in 2019 3.11 EGAT electricity sale profile to PEA R1 and direct customer in PEA R1 in 2019 3.12 EGAT electricity sale profile to PEA R2 and direct customer in PEA R2 in 2019 3.13 EGAT electricity sale profile to PEA R3 and direct customer in PEA R3 in 2019 3.14 EGAT electricity sale profile to PEA R4 and direct customer in PEA R4 in 2019 3.15 EGAT electricity sale profile 2019 3.16 MEA electricity requirement profile in 2019 3.17 The electricity requirement profile from PEA R1 in 2019 3.18 The electricity requirement profile from PEA R2 in 2019 3.19 The electricity requirement profile from PEA R3 in 2019 3.20 The electricity requirement profile from PEA R4 in 2019 3.21 The electricity requirement profile from TNB in 2019 3.22 The electricity requirement profile from EDL in 2019 3.23 The electricity requirement profile from PEA R2 and EDL in 2019 3.24 The electricity requirement profile from PEA R3 and TNB in 2019 3.25 The electricity requirement profile from MEA and PEA R1 in 2019 3.26 The EGAT net generation profile in 2019 3.27 Transmission loss profile in 2019 4.1 The MEA transmission loss and use profile in 2019 4.2 The PEA R1 transmission loss and use profile in 2019 4.3 The PEA R2 transmission loss and use profile in 2019 4.4 The PEA R3 transmission loss and use profile in 2019 4.5 The PEA R4 transmission loss and use profile in 2019 4.6 The MEA total net electricity generation requirement in 2019 5.1 The PEA R1 total net electricity generation requirement in 2019 5.2 The PEA R2 total net electricity generation requirement in 2019 5.3 The PEA R3 total net electricity generation requirement in 2019 5.4 The PEA R4 total net electricity generation requirement in 2019 5.5 Total net electricity generation requirement in 2019 5.6 Electricity generation from VSPP in MEA region during 2005–2021 6.1 Electricity generation from VSPP in PEA region during 2005–2021 6.2 Electricity generation from DEDE in PEA region during 2005–2021 6.3 Self electricity generation in PEA region during 2005–2021 6.4 Electricity generation from VSPP during 2015–2021 6.5 VSPP contract capacity in the PDP2018 Rev.1 7.1 VSPP electricity generation in the PDP2018 Rev.1 7.2 VSPP contract capacity in the PDP2022 case 7 7.3 VSPP electricity generation in the PDP2022 case 7 7.4 Total electricity generation from VSPPs in PDP2018 Rev.1 7.5 Total electricity generation from VSPPs in PDP2022 case 7 7.6 VSPPs contract capacity 7.7 VSPPs contract capacity mix 7.8 Electricity generation from VSPPs 7.9 Electricity generation mix from VSPPs 7.10 "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
